typesearchparam=輸入的搜尋參數資訊
text.abstractdynamicsavedquerysearchparameter.description=此容器用於處理 flexible search 中的參數。假設已指定搜尋「SELECT {pk} FROM {Customer} WHERE &lt;param&gt;」，則會建立參數清單 (可指定如何取代 &lt;param&gt;).
text.abstractdynamicsavedquerysearchparameter.emptyhandling.description=這會指定如何處理空參數值。<br><ul><li>忽略 - 若參數值為空，則從查詢中移除該參數</li><li>原樣保留 - 不論參數值為何，都保留該參數</li><li>修剪並忽略 - 先修剪值，若為空，則從清單中移除該參數。</li></ul>若對此參數使用了「為空」或「不為空」運算子，則此方法不會產生任何效果.
text.abstractdynamicsavedquerysearchparameter.searchparametername.description=未當地語系化的搜尋參數名稱。應與 flexible search 中提供的參數相符。通常後接「?」字元.
text.abstractdynamicsavedquerysearchparameter.joinalias.description=如果在 JOIN 陳述式中使用此參數，請在這裡提供別名。請確保該別名與查詢中使用的相符.
text.abstractdynamicsavedquerysearchparameter.name.description=在搜尋介面中使用的當地語系化參數名稱。將用於取代參數名稱.

text.typeddynamicsavedquerysearchparameter.description=若在 JOIN 陳述式中使用，請使用此參數類型。使用該參數，您可以選取特定類型 (實際您要聯結的類型)。然後可以從類型中選取將用作參數的屬性.
text.typeddynamicsavedquerysearchparameter.typedsearchparameter.description=顯示供搜尋使用的可用類型屬性清單。只有在先選取封入類型時才會填入。      
text.typeddynamicsavedquerysearchparameter.enclosingtype.description=要聯結的實際類型。必須先予以選取，然後才能取得可能搜尋屬性的清單.

text.composedtypedynamicsavedquerysearchparameter.description=若您希望在屬於查詢結果類型的屬性中進行選取，請使用此類型。將預設封入類型，且不可變更.

text.wherepart.replacepattern.description=這是在參考查詢中使用組合的 Where 部分將取代的樣式。例如，若查詢為「SELECT {pk} FROM {Customer} WHERE &lt;param&gt;」，則應將取代樣式設為 &lt;param&gt;。隨後將使用產生的 Where 部分取代此部分。 
text.wherepart.dynamicparams.description=包含為此 Where 部分填入參數的清單。此清單中指定的參數將顯示在搜尋介面中。 

text.dynamicsavedquery.description=對所儲存查詢的更靈活的實作。在將查詢傳送至內部搜尋機制之前，將根據參數設定計算參數值，可能會從搜尋字串中移除缺少的參數。因此，即使缺少參數，也可以執行查詢。查詢的形式類似於「SELECT {pk} FROM {Customer} WHERE &lt;param&gt;」.
text.dynamicsavedquery.wherepart.description=查詢通常包含一個 Where 部分。請在這裡建立此 Where 部分。若是 Sub Select 查詢，可能會有多個 Where 部分，因此您可以在這裡提供 Where 部分的清單。只需確保其取代樣式存在差異即可。另請確保 Where 部分中的取代樣式與查詢中的取代樣式相符。在上述範例中，必須至少有一個 Where 部分，使用 &lt;param&gt; 作為取代樣式.
text.dynamicsavedquery.generatedflexiblesearch.description=顯示產生的 flexible search (如同在搜尋介面中填入所有參數後的使用狀況一樣)。讓您瞭解其外觀.

advancedsavedquery.wherepart.and.truename=AND
advancedsavedquery.wherepart.and.falsename=OR
