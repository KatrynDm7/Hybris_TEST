typesearchparam=键入的搜索参数信息
text.abstractdynamicsavedquerysearchparameter.description=此容器用于处理 Flexible Search 中的参数。假设一个指定了以下搜索: 'SELECT {pk} FROM {Customer} WHERE &lt;param&gt;'，则另一个将创建一个参数列表，用于指定如何替换 &lt;param&gt;.
text.abstractdynamicsavedquerysearchparameter.emptyhandling.description=这指定了如何处理空参数值。<br><ul><li>忽略 - 如果为空，则从查询中移除参数</li><li>保持原样 - 无论值为何，均保留参数</li><li>修剪和忽略 - 先修剪值，如果为空，则也从列表中移除参数。</li></ul>如果对此参数使用了“为空”或“不为空”运算符，则这种处理方法没有任何影响.
text.abstractdynamicsavedquerysearchparameter.searchparametername.description=未本地化的搜索参数名称。应匹配 Flexible Search 中提供的参数。通常后面紧跟“?”字符.
text.abstractdynamicsavedquerysearchparameter.joinalias.description=如果此参数用于 JOIN 语句中，请在此提供别名。确保其与您在查询中所使用的相匹配.
text.abstractdynamicsavedquerysearchparameter.name.description=在搜索界面中使用的本地化参数名称。将用于替换参数名称.

text.typeddynamicsavedquerysearchparameter.description=如果用在 JOIN 语句中，请使用此参数类型。通过使用该参数，您可以选择一个特定类型(即您要结合的具体类型)。然后，您可以从该类型中选择要用作参数的属性.
text.typeddynamicsavedquerysearchparameter.typedsearchparameter.description=显示用于搜索的可用类型属性列表。仅在已先选择封闭类型时会填充。      
text.typeddynamicsavedquerysearchparameter.enclosingtype.description=要结合的实际类型。必须先选择才能获取可能的搜索属性列表.

text.composedtypedynamicsavedquerysearchparameter.description=如果要在属于查询结果类型的属性中进行选择，请使用此类型。预设置的是封闭类型，且不可更改.

text.wherepart.replacepattern.description=这是在引用查询中替换为组合式 where 部分的模式。例如，如果查询为 “SELECT {pk} FROM {Customer} WHERE &lt;param&gt;”，则替换模式应设置为 &lt;param&gt;。此部分随后将替换为输出的 where 部分。 
text.wherepart.dynamicparams.description=包含为此 where 部分填充的参数的列表。该列表中指定的参数将显示在搜索界面。 

text.dynamicsavedquery.description=提高保存的查询的实施灵活度。在此查询传递到内部搜索机制之前，将根据参数设置评估参数值，缺少的参数可能会从搜索字符串中予以删除。因此，即使缺少参数，亦能执行查询。查询形式类似于 “SELECT {pk} FROM {Customer} WHERE &lt;param&gt;“.
text.dynamicsavedquery.wherepart.description=一条查询通常包含一个 where 部分。请在此创建 where 部分。如果是 Sub Select 查询，则可以有多个 where 部分，因此可以在此提供一个 where 部分列表。只需确保它们的“替换模式”存在差异。另外，还应确保 where 部分的替换模式与查询中的替换模式匹配。在我们上面的示例中，必须有至少一个使用 &lt;param&gt; 作为替换模式的 where 部分.
text.dynamicsavedquery.generatedflexiblesearch.description=显示生成的 Flexible Search (如果所有参数在搜索界面内填充，将会使用 Flexible Search)。让您了解其外观形式.

advancedsavedquery.wherepart.and.truename=AND
advancedsavedquery.wherepart.and.falsename=OR
