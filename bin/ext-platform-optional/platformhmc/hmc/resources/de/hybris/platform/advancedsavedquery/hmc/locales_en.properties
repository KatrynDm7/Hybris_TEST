typesearchparam=Typed Search Parameter Info
text.abstractdynamicsavedquerysearchparameter.description=This container is used to handle a parameter in a flexible search. Assume one specified the following search 'SELECT {pk} FROM {Customer} WHERE &lt;param&gt;' one will create a list of parameters specifying how to replace &lt;param&gt;.
text.abstractdynamicsavedquerysearchparameter.emptyhandling.description=This specifies how to deal with empty parameter values. <br><ul><li>Ignore - if empty remove parameter from query</li><li>As is - leave the parameter in no matter what value it has</li><li>Trim &amp; Ignore - trims the value first, if then empty removes the parameter from the list too.</li></ul>This doesn't have any effect if one of the 'is empty' or 'is not empty' operators are used for this parameter.
text.abstractdynamicsavedquerysearchparameter.searchparametername.description=Unlocalized search parameter name. Should match the parameter provided in the flexible search. Usually the one that follows the '?' character.
text.abstractdynamicsavedquerysearchparameter.joinalias.description=If the parameter is used in a JOIN statement, please provide the Alias here. Make sure it matches the one you use in your query.
text.abstractdynamicsavedquerysearchparameter.name.description=A localized parameter name which is used in the search interface. Will be used instead of the Parameter Name.

text.typeddynamicsavedquerysearchparameter.description=Use this parameter type, if used in a JOIN statement. With that parameter you can select a specific type (actually the one you would like to join). Then you can select the attribute you like to use as a parameter from that type.
text.typeddynamicsavedquerysearchparameter.typedsearchparameter.description=Display a list of available type attributes for usage in the search. Is populated only if an enclosing type has been selected first.      
text.typeddynamicsavedquerysearchparameter.enclosingtype.description=The actual type to join. Must be selected first to get a list of possible search attributes.

text.composedtypedynamicsavedquerysearchparameter.description=Use this type if you want to select from attributes belonging to the query Result Type. Enclosing Type will be preset and won't be changeable.

text.wherepart.replacepattern.description=That's the pattern to replace with the assembled where part in the referring query. E.g. if "SELECT {pk} FROM {Customer} WHERE &lt;param&gt;" is the query the Replace Pattern should be set to &lt;param&gt;. This part will then be replaced with the generated where part. 
text.wherepart.dynamicparams.description=Holds a list of parameters populated for this where part. Parameter specified in this list will be shown at the search interface. 

text.dynamicsavedquery.description=A more flexible implementation of Saved Queries. Before the query is passed on to the internal search mechanism the parameter values will be evaluated and based on the parameter settings, missing parameters may get removed from the search string. Therefore the query can be executed even if parameters are missing. A query may look like this "SELECT {pk} FROM {Customer} WHERE &lt;param&gt;".
text.dynamicsavedquery.wherepart.description=A query usually consists of one where part. Create this where part here. In case of a Sub Select Query you may have multiple where parts, therefore you can provide a list of them here. Just make sure they differ in there Replace Pattern. Make also sure the Replace Pattern in your where part matches the one in your query. In our example from above you must have at least one where part, using &lt;param&gt; as the Replace Pattern.
text.dynamicsavedquery.generatedflexiblesearch.description=Displays the generated flexible search as it would be used if all parameters are populated within the search interface. Gives you an idea on how it looks like.

advancedsavedquery.wherepart.and.truename=AND
advancedsavedquery.wherepart.and.falsename=OR
