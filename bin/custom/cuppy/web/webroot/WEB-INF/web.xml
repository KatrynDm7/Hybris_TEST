<?xml version="1.0" encoding="iso-8859-1"?>

<web-app id="yockpit" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>cuppy</display-name>
	
<!--
	Enabling a Spring web application context with 'session' and 'request' scope.
	- The 'contextConfigLocation' param specifies where your configuration files are located.
	- The HybrisContextLoaderListener extends the usual SpringContextLoaderListener (which loads
	  the context from specified location) by adding the global application context of
	  the platform as parent context. With having the global context set as parent you can access
	  or override beans of the global context and get the 'tenant' scope.
	- The RequestContextListener is needed for exposing the 'request' scope to the context.
	  Furthermore it is needed when overriding the 'jalosession' bean for your web application.
 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		  	classpath:cockpit/cockpit-spring-wrappers.xml,
		  	classpath:cockpit/cockpit-spring-services.xml,
			classpath:cockpit/cockpit-web-spring.xml,
			classpath:cockpit/cockpit-spring-editors.xml,
		  	classpath:cockpit/cockpit-spring-wizards.xml,

			classpath:cuppy/cuppy-spring-services.xml,
			classpath:cuppy/cuppy-spring-security.xml,
			classpath:cuppy/cuppy-spring-editors.xml,
		  	classpath:cuppy/cuppy-web-spring.xml,
		  	classpath:cuppy/cuppy-frontend-web-spring.xml
		</param-value>
	</context-param>

	<servlet>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>
		<!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet). -->
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<init-param>
            <param-name>log-level</param-name>
            <param-value>ERROR</param-value>
        </init-param>
		<load-on-startup>1</load-on-startup><!-- MUST -->
	</servlet>
	
	<!-- DSP (optional) -->
	<!-- Uncomment if you want to use Potix DSP in your Website-->
	<servlet>
		<servlet-name>dspLoader</servlet-name>
		<servlet-class>org.zkoss.web.servlet.dsp.InterpreterServlet</servlet-class>
		<init-param>
			<param-name>class-resource</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>dspLoader</servlet-name>
		<url-pattern>*.dsp</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>cockpitFCKConfigLoader</servlet-name>
		<servlet-class>de.hybris.platform.cockpit.util.CockpitFCKConfigServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>cockpitFCKConfigLoader</servlet-name>
		<url-pattern>/zkau/web/js/ext/FCKeditor/fckstyles.xml</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>cockpitFCKConfigLoader</servlet-name>
		<url-pattern>/cockpit/customcomponents/cockpit-fck-config.js</url-pattern>
	</servlet-mapping>
	
	
	<!-- Default init filter for all ajax requests: this is required to	activate correct hybris tenant and jalo session -->
	<filter>
		<filter-name>HybrisInitFilter</filter-name>
		<filter-class>de.hybris.platform.util.HybrisInitFilter</filter-class>
		<init-param><param-name>enable.compression</param-name><param-value>false</param-value></init-param>
		<init-param><param-name>enable.buffer.regexp</param-name><param-value>true</param-value></init-param>
		<init-param><param-name>tenantIDPattern</param-name><param-value>;\s*tenantID\s*=\s*(\w+)</param-value></init-param>
		<init-param><param-name>initialized.only</param-name><param-value>true</param-value></init-param>
		<init-param><param-name>redirectOnSystemInit</param-name><param-value>true</param-value></init-param>
	</filter>
	
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.RequestContextFilter
		</filter-class>
	</filter>	
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

 	<filter-mapping><filter-name>HybrisInitFilter</filter-name><url-pattern>*.jsp</url-pattern></filter-mapping>
	<filter-mapping><filter-name>HybrisInitFilter</filter-name><url-pattern>*.zul</url-pattern></filter-mapping>
	<filter-mapping><filter-name>HybrisInitFilter</filter-name><url-pattern>*.zhtml</url-pattern></filter-mapping>
	<filter-mapping><filter-name>HybrisInitFilter</filter-name><url-pattern>/zkau/*</url-pattern></filter-mapping>
	<filter-mapping><filter-name>HybrisInitFilter</filter-name><url-pattern>/j_spring_security_check</url-pattern></filter-mapping>
  	
	<filter-mapping><filter-name>requestContextFilter</filter-name><url-pattern>*.zul</url-pattern></filter-mapping>
	<filter-mapping><filter-name>requestContextFilter</filter-name><url-pattern>*.zhtml</url-pattern></filter-mapping>
	<filter-mapping><filter-name>requestContextFilter</filter-name><url-pattern>/</url-pattern></filter-mapping>
	<filter-mapping><filter-name>requestContextFilter</filter-name><url-pattern>/zkau/*</url-pattern></filter-mapping>
	<filter-mapping><filter-name>requestContextFilter</filter-name><url-pattern>/j_spring_security_check</url-pattern></filter-mapping>
	
  	<filter-mapping><filter-name>springSecurityFilterChain</filter-name><url-pattern>/zkau/*</url-pattern></filter-mapping>
	<filter-mapping><filter-name>springSecurityFilterChain</filter-name><url-pattern>/j_spring_security_check</url-pattern></filter-mapping>
	<filter-mapping><filter-name>springSecurityFilterChain</filter-name><url-pattern>*.jsp</url-pattern></filter-mapping>
	<filter-mapping><filter-name>springSecurityFilterChain</filter-name><url-pattern>*.zul</url-pattern></filter-mapping>
	<filter-mapping><filter-name>springSecurityFilterChain</filter-name><url-pattern>*.zhtml</url-pattern></filter-mapping> 	
	<listener>
		<display-name>ZK Session Cleaner</display-name>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
	</listener>

	<listener>
	  	<listener-class>de.hybris.platform.spring.HybrisContextLoaderListener</listener-class>
	</listener>

 	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- MIME mapping -->
	<mime-mapping>
		<extension>gif</extension>
		<mime-type>image/gif</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>html</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>htm</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jad</extension>
		<mime-type>text/vnd.sun.j2me.app-descriptor</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpeg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>js</extension>
		<mime-type>application/x-javascript</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>png</extension>
		<mime-type>image/png</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>txt</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xml</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zhtml</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zul</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

<!--	<session-config>-->
<!--		<session-timeout>1</session-timeout>-->
<!--	</session-config>-->

	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.zul</welcome-file>
	</welcome-file-list>
	
</web-app> 
