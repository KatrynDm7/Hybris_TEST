
# -----------------------------------------------------------------------
# [y] hybris Platform 
# 
# Copyright (c) 2000-2015 hybris AG
# All rights reserved.
#  
# This software is the confidential and proprietary information of hybris 
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with hybris.
#
#  
# -----------------------------------------------------------------------

# you can put key/value pairs here.
# Use Config.getParameter(..) to retrieve the values during runtime.


# Specifies the location of the spring context file putted automatically to the global platform application context.
ychinaacceleratorstorefront.application-context=ychinaacceleratorstorefront-spring.xml

# Specifies the location of the acceleratorstorefrontcommons spring context file
ychinaacceleratorstorefront.additionalWebSpringConfigs.acceleratorstorefrontcommons=classpath:/acceleratorstorefrontcommons/web/spring/acceleratorstorefrontcommons-spring.xml



# Specify how long resource messages should be cached.
# Set to -1 to never expire the cache.
# Suggested values:
#   Development: 1
#   Production: -1
storefront.resourceBundle.cacheSeconds=1

# Turn on test IDs for selenium and smoke tests (not for production)
#ychinaacceleratorstorefront.testIds.enable=true

# Show debug info in the frontend pages
# Suggested values:
#   Development: true
#   Production:  false
storefront.show.debug.info=true

# Flag the tomcat JSessionID cookie as httpOnly
ychinaacceleratorstorefront.tomcat60.context.useHttpOnly=true

# Prevent injection of JSESSIONID into URLs
ychinaacceleratorstorefront.tomcat60.context.disableURLRewriting=true


# Enable storefront static resources client side caching.
# Suggested values:
#   Development: no-cache,must-revalidate
#   Production: public,max-age=600
# In development this will prevent these resources from being cached.
# In production this will cache these static resources for only 10 minutes
# after which the client will check if the resource has changed using the
# resource's ETAG. This is required as the resource file contents could change
# without the URL changing.
#storefront.staticResourceFilter.response.header.Cache-Control=public,max-age=600
storefront.staticResourceFilter.response.header.Cache-Control=no-cache,must-revalidate


# Enable media client side caching for 1 year. This is fine because the media
# URLs change each time there is a data change within the media
mediafilter.response.header.Cache-Control=public,max-age=31536000


# Flag to control evaluation of BTG rules.
# Support configuration per storefront.
storefront.btg.enabled=true


###########
# Context root for the storefront.
# By default this is set to the extension name.
# The XXX.webroot controls the actual context path for the extension's web module.
# The storefrontContextRoot is used to set the context path in the impexed data.
# Both of these values should be changed together.
# If you want to change these values then it is suggested that you override both of
# them in your config/local.properties file rather than changing the value here.
# If you want to remap the the context path to the root site on the web container
# then you must set these values to be blank, do not set them to be '/'
ychinaacceleratorstorefront.webroot=/ychinaacceleratorstorefront
storefrontContextRoot=/ychinaacceleratorstorefront


###########
# Qualified website storefront URLs for each CMSWebSite.
# By default the storefront is accessed via a localhost URL.
# If you are running multiple websites from a single storefront them you
# may want to use different hostnames to access each website. In that case
# the system needs to know the hostnames that you have chosen to use.
# The fully qualified URL that customers will use to access the website is
# also required for asynchronous processes like email content creation.
# During development it is likely that you will either use localhost if you
# only have one website or you will use XXXX.local where XXXX is the site uid.
# To use a hostname like XXXX.local you will need to setup a mapping in your
# local system DNS hosts file. See: http://en.wikipedia.org/wiki/Hosts_(file)
# Using a scheme like XXXX.local also allows for XXXX.uat and XXXX.test to
# support multiple environments.
# In production the fully qualified URL to the website should be used.
# Also note that the port numbers should not be specified if they are the
# default values.

# For example you may setup a URL mapping as follows:
# NOTE you should define your mapping in your config/local.properties rather
# than here in the extension's properties file.

# 
website.electronics-cn.http=http://electronics-cn.local:9001/ychinaacceleratorstorefront
website.electronics-cn.https=https://electronics-cn.local:9002/ychinaacceleratorstorefront
# 

###########
# Qualified media URLs for each CMSWebSite used to load images and other media
# 
media.electronics-cn.http=http://electronics-cn.local:9001
media.electronics-cn.https=https://electronics-cn.local:9002
# 

# Google API key
googleApiKey=AIzaSyAzCzRhJpU7JdYY8co2JTGKMflSynKx_F8

#version of the google map api
googleApiVersion=3.7

# This is the (XML format) reverse geocoding URL for version 3 of the
# Google Maps JavaScript API
google.geocoding.reverse.url=http://maps.googleapis.com/maps/api/geocode/xml

# Google Analytics Tracking IDs
google.analytics.tracking.id=UA-28841331-1
google.analytics.tracking.id.electronics-cn.local=UA-28841331-1
google.analytics.tracking.id.electronics-cn.cloud=UA-28841331-1
google.analytics.tracking.id.electronics-cn.qaserver=UA-28841331-1
# 


# Jirafe properties
jirafe.api.url=http://api.jirafe.com/v1/
jirafe.api.token=ad6eda7401d6dea60e4d8be53beeb490
jirafe.app.id=59781
jirafe.version=magento-v0.3.0
jirafe.data.url=data.jirafe.com

# Default site ID
jirafe.site.id=99804

# Jirafe properties for the local system
# 
jirafe.site.id.electronics-cn.local=99804
#jirafe.site.id.usd.electronics-cn.local=99803
jirafe.site.id.cny.electronics-cn.local=99804
# 


# Jirafe properties for the cloud
# 
#jirafe.site.id.electronics-cn.cloud=1671
#jirafe.site.id.usd.electronics-cn.cloud=1681
#jirafe.site.id.cny.electronics-cn.cloud=1671
#


# Jirafe properties for the qaserver
#
#jirafe.site.id.electronics-cn.qaserver=1671
#jirafe.site.id.usd.electronics-cn.qaserver=1681
#jirafe.site.id.cny.electronics-cn.qaserver=1671
#



###########
# Search results page size configuration per store:
# Set to zero to load the default page size
storefront.search.pageSize.Desktop=0


###########
# StoreLocator results page size configuration per store:
# Set to zero to load the default page size
storefront.storelocator.pageSize.Desktop=10


###########
# Configuration for showing checkout flow options on the cart page
# The accelerator has a strategy to select the checkout flow for a site. This strategy
# can be overridden by selecting a different strategy on the cart page. This may be useful
# during development while the desired strategy is being developed.
# For production this should be disabled. If no configuration is specified then FALSE is assumed.
# The configuration below is set to enable checkout flow selection for all sites.
# The configuration can also be overridden per site.
storefront.show.checkout.flows=true
# Specify configuration for a single site
#storefront.show.checkout.flows.electronics=true

###########
# CSS and JS files compression into one using Google granule project 
# (http://code.google.com/p/granule/) is disabled by default.
# Here you can enable it on site/frontend level
storefront.granule.enabled=false

#Guest User order status page expiry timeline
guest.orderstatuspage.access.expiry.month=3

#Number of pagination results for PickupInStore UI search
pointofservice.display.search.results.count=6

#Fallback taxcode is returned by DefaultTaxCodeStrategy when it cannot find taxCode for product and taxArea
#Different value can be configure for different base store by adding base store name at the end of property name
externaltax.fallbacktaxcode=PC040100
# 
#externaltax.fallbacktaxcode.electronics-cn=PC040100
# 

#Number of pagination results to display
pagination.number.results.count=5

############XSS FILTER SECURITY SETTINGS###############
xss.filter.enabled=true

#default rules
ychinaacceleratorstorefront.xss.filter.rule.script_fragments=(?i)<script>(.*?)</script>
ychinaacceleratorstorefront.xss.filter.rule.lonely_script_tags=(?i)</script>
ychinaacceleratorstorefront.xss.filter.rule.lonely_script_tags2=(?ims)<script(.*?)>
ychinaacceleratorstorefront.xss.filter.rule.eval=(?ims)eval\\((.*?)\\)
ychinaacceleratorstorefront.xss.filter.rule.src1=(?ims)[\\s\r\n]+src[\\s\r\n]*=[\\s\r\n]*\\\'(.*?)\\\'
ychinaacceleratorstorefront.xss.filter.rule.src2=(?ims)[\\s\r\n]+src[\\s\r\n]*=[\\s\r\n]*\\\"(.*?)\\\"
ychinaacceleratorstorefront.xss.filter.rule.src3=(?ims)[\\s\r\n]+src[\\s\r\n]*=*(.*?)>
ychinaacceleratorstorefront.xss.filter.rule.expression=(?ims)expression\\((.*?)\\)
ychinaacceleratorstorefront.xss.filter.rule.javascript1=(?i)javascript:
ychinaacceleratorstorefront.xss.filter.rule.javascript2=(?i)#
ychinaacceleratorstorefront.xss.filter.rule.vbscript=(?i)vbscript:
ychinaacceleratorstorefront.xss.filter.rule.onload=(?ims)onload(.*?)=
ychinaacceleratorstorefront.xss.filter.rule.braces=(?i)<(.*?)>

# again, override per extension
# hac.xss.filter.rule.vbscript=
#######################################################


# Baidu Map API key
baiduMapApiKey=GuP2740uXIZS04gPZrwGkOhM

#version of the Baidu map api
baiduMapApiVersion=1.5

# setting if image tags <img> should be replaced with the enhanced version prepared for lazy-loading using a jQuery plugin
ychinaacceleratorstorefront.lazyload=true

# URLs that do not need CSRF verification
#csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop-response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop-response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$
#csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop-response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop-response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$
csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop-response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop-response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/+(alipay)+/(.)*$
#csrf.allowed.url.patterns=^https?://orderpagetest.ic3.com+(/[^?]*)$


###########
# Configuration for Alipay  
# web.partner = 2088101877724597
#web.key = fhz4lrh398uoydbfhsp3h3dqa3asltxo
#web.seller.email = overseas_test@alipay.com

#basepath=http://electronics-cn.local:9001/ychinaacceleratorstorefront/
#returnBaseUrl=http://electronics-cn.local:9001/ychinaacceleratorstorefront/

#request.subject=Order number:
#alipay.testmode=true
#alipay.test.amount=0.02
#is.supply.returnurl=true
#request.timeout=10m
#alipay.timezone=Asia/Shanghai


#-----------------------------------------------------------------------
# Mocking Alipay
#---------------
# Property value examples for mocking the Alipay system.
# If you want to mock on your for example local development machine the Alipay system, copy these 2 properties to local.properties and enable them. 
# web.gateway=http://electronics-cn.local:9001/ychinaacceleratorstorefront/electronics-cn/zh/alipay/mock/gateway.do?
# web.https.verify.url=http://electronics-cn.local:9001/ychinaacceleratorstorefront/electronics-cn/zh/alipay/mock/gateway.do/notify.verify?
#-----------------------------------------------------------------------
#######################################################

# Used to substitute package for addonsupport spring configuration
b2cstorefront.package=de.hybris.platform.ychinaaccelerator.storefront

#############################
### Weblogic specific properties
## Define the tld libs required to be copied to the WEB-INF of the generated war 
## when packaging into an ear
#############################
ychinaacceleratorstorefront.weblogic.copy-tld-files=spring.tld,spring-form.tld,security.tld