<?xml version="1.0" encoding="iso-8859-1"?>

<!--
  ~ [y] hybris Platform
  ~
  ~ Copyright (c) 2000-2015 hybris AG
  ~ All rights reserved.
  ~
  ~ This software is the confidential and proprietary information of hybris
  ~ ("Confidential Information"). You shall not disclose such Confidential
  ~ Information and shall use it only in accordance with the terms of the
  ~ license agreement you entered into with hybris.
  -->

<web-app id="flashcards" version="3.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 metadata-complete="true">
	<absolute-ordering/>

	<display-name>datahubadapter</display-name>

	<!-- In addition to the HybrisInitFilter, this will check the Accept-Language request header and add the language settings to the 
		jaloSession. You can access the jaloSession using JaloSession.getCurrentSession() Filter that will do initialization work for each 
		web application which include: - Getting the JaloSession from the HttpSession or, if not available, create a new JaloSession - Activate 
		this JaloSession so that calls to JaloSession.getCurrentSession() can be performed. - Iterate through all managers and call the doPreRequest(..) 
		method. -->
	<filter>
		<filter-name>InitFilter</filter-name>
		<filter-class>de.hybris.platform.util.HybrisInitFilter</filter-class>
		<!-- GZIP compression of response (default = true) -->
		<init-param>
			<param-name>enable.compression</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>tenantIDPattern</param-name>
			<param-value>;\s*tenantID\s*=\s*(\w+)</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>InitFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- spring based filter chain -->
	<filter>
		<description>
			Spring configured chain of spring filter beans
		</description>
		<filter-name>datahubadapterPlatformFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>datahubadapterPlatformFilterChain</filter-name>
		<servlet-name>springmvc</servlet-name>
	</filter-mapping>

	<!-- provides support for ETag and If-None-Match, shallow -->
	<filter>
		<filter-name>ETagFilter</filter-name>
		<filter-class>com.hybris.datahub.core.filter.ImprovedShallowEtagHeaderFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ETagFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>httpPutFormFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>

	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
		<init-param>
			<param-name>cors.supportedMethods</param-name>
			<param-value>GET, POST, HEAD, PUT, PATCH, DELETE, OPTIONS</param-value>
		</init-param>
		<init-param>
			<!-- fix for http://code.google.com/p/chromium/issues/detail?id=108394 -->
			<param-name>cors.supportedHeaders</param-name>
			<param-value>origin, content-type, accept</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CORS</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>XSSFilter</filter-name>
		<filter-class>de.hybris.platform.servicelayer.web.XSSFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>XSSFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/datahubadapter-web-spring.xml</param-value>
	</context-param>

	<listener>
		<listener-class>de.hybris.platform.spring.HybrisContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<error-page>
		<location>/unknownError.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/unknownError.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/unknownError.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/error404.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/exception.jsp</location>
	</error-page>


</web-app> 
