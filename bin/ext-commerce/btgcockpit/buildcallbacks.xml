<?xml version="1.0"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.

  
-->

<!--
 All hybris buildcallbacks.xml macrodefinitions:
 
 Build/Documentation
 
	 before/after ant macro "clean"
		 <macrodef name="btgcockpit_before_clean"/>
		 <macrodef name="btgcockpit_after_clean"/>
	 
	 before/after ant macro "build"
		 <macrodef name="btgcockpit_before_build"/>
		 <macrodef name="btgcockpit_after_build"/>
		 
	 before/after ant macro "compile_core" - the core module of the extension
		 <macrodef name="btgcockpit_before_compile_core">
		 <macrodef name="btgcockpit_after_compile_core">
	 
	 before/after ant macro "compile_web" - the web module of the extension
		 <macrodef name="btgcockpit_before_compile_web" />
		 <macrodef name="btgcockpit_after_compile_web" />
	 
	 before/after ant macro "compile_hmc" - the hmc module of the extension
		 <macrodef name="btgcockpit_before_compile_hmc" />
		 <macrodef name="btgcockpit_after_compile_hmc" />
 
 Preparing extension
 
	 will be called in the beginning of the ant call and only once (also when using multiple 
	 ant targets e.g. ant build yunittest)	
		 <macrodef name="btgcockpit_only_once_prepare"/>
 
 Creating ear module/production
 
	 before/after ant macro "ear"
		 <macrodef name="btgcockpit_before_ear"/>
		 <macrodef name="btgcockpit_after_ear"/>

	 before/after ant macro "production" - for hybris server only
		 <macrodef name="btgcockpit_before_production" />
		 <macrodef name="btgcockpit_after_production" />
 
 JUnit Test
 
	 before/after ant macro "yunitinit" 
		 <macrodef name="btgcockpit_before_yunitinit" />
		 <macrodef name="btgcockpit_after_yunitinit" />
	 
	 before/after ant macro "yunit"
		 <macrodef name="btgcockpit_before_yunit" />
		 <macrodef name="btgcockpit_after_yunit" /> 
		 
 Distribution package
 
 	 before/after ant macro "dist" - internal target; only for use when platform is available in source code
		 <macrodef name="btgcockpit_after_dist"/>
		 <macrodef name="btgcockpit_before_dist"/>
	 
	 before/after ant macro "dist_copy" - internal target; only for use when platform is available in source code
		 <macrodef name="btgcockpit_before_dist_copy"/>
		 <macrodef name="btgcockpit_after_dist_copy"/>
 
-->

<project name="btgcockpit_buildcallbacks" >
	
	<property name="btgcockpit.base.extension.name" value="btgcockpit"/>
	
	<macrodef name="btgcockpit_before_build">
		<sequential>
			<foreachext>
				<do>
					<if>
						<and>
							<equals arg1="${ext.@{extname}.webmodule.available}" arg2="available" />
							<contains string="${required.extensions.for.@{extname}}" substring="${btgcockpit.base.extension.name}"/>
						</and>
						<then>
							<echo level="info" message="Start copying btg cockpit files for extension @{extname}..."/>
							<copy todir="${ext.@{extname}.path}/web/webroot">
								<fileset dir="${ext.btgcockpit.path}/web/webroot">
									<include name="btgcockpit/**/**.*" />
								</fileset>
							</copy>
						</then>
					</if>
				</do>
			</foreachext>
		</sequential>
	</macrodef>

	<macrodef name="btgcockpit_after_clean">
		<sequential>
			<foreachext>
				<do>
					<if>
						<and>
							<equals arg1="${ext.@{extname}.webmodule.available}" arg2="available" />
							<contains string="${required.extensions.for.@{extname}}" substring="${btgcockpit.base.extension.name}"/>
						</and>
						<then>
							<echo level="info" message="Start cleaning up btg cockpit files for extension @{extname}"/>
							<delete quiet="true" dir="${ext.@{extname}.path}/web/webroot/btgcockpit"/>
						</then>
					</if>
				</do>
			</foreachext>
		</sequential>
	</macrodef>
	
	
	<!-- 
	    Called whenever 'ant ear' is used. this callback can be used to modify the content of the ear file
	
	     ${ear.path}: 			path to ear
	 -->
	<macrodef name="btgcockpit_before_ear">
		<sequential>

			<!-- you can do anything before the EAR file is being packed -->
			
		</sequential>
	</macrodef>
		
</project>
