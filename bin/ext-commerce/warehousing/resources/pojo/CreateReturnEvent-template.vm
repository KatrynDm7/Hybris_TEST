/*
* ----------------------------------------------------------------
* --- WARNING: THIS FILE IS GENERATED AND WILL BE OVERWRITTEN!
* --- Generated at $currentDateTime
* ----------------------------------------------------------------
*
* [y] hybris Platform
*
* Copyright (c) 2000-2015 hybris AG
* All rights reserved.
*
* This software is the confidential and proprietary information of hybris
* ("Confidential Information"). You shall not disclose such Confidential
* Information and shall use it only in accordance with the terms of the
* license agreement you entered into with hybris.
*
*
*/
package $packageName;

import java.io.Serializable;
#if(! $superclassName)
import de.hybris.platform.servicelayer.event.events.AbstractEvent;
#end

#foreach($i in $imports)
import $i;
#end
#if ( ! $imports.isEmpty() )

#end
#if ( $hasDescription )
/**
* $description
*/
#end
public class $shortClassName #if($superclassName)extends $superclassName #else extends AbstractEvent #end
{

#foreach($v in $memberVariables)
    $v.comment
private $v.type $v.name;
#end

public ${constructorName}()
{
super();
}

public ${constructorName}(final Serializable source)
{
super(source);
}

#foreach($v in $memberVariables)
    #if ($v.overridden)@Override #end

public void set${StringUtils.capitalize($v.name)}(final ${v.type} ${v.name})
{
this.${v.name} = ${v.name};
}

    #if ($v.overridden)	@Override #end
    #if ($v.type == 'boolean')
    public $v.type is${StringUtils.capitalize($v.name)}()
    {
    return $v.name;
    }
    #else

    public $v.type get${StringUtils.capitalize($v.name)}()
    {
    return $v.name;
    }
    #end

#end
}