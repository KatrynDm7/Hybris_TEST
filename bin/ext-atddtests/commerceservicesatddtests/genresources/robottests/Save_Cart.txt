*** Settings ***
Resource          commerce/CommerceServices_Keywords.txt
Test Setup        import commerce sample data


*** Variables ***

### user and site:
${customerId}=    testuser@saved-carts.com
${customerId2}=    testuser2@saved-carts.com
${saveCartName1}=    Saved Cart 1
${saveCartDescription1}=    This is a saved cart
${saveCartName2}=    Saved Cart 2
${saveCartDescription2}=    This is an another saved cart
${expirationDays}=    30

*** Test Cases ***

### ANONYMOUS SESSION CART:

Test_Save_Cart_AnonymousSessionCart_FAIL
	[Documentation]    Testing: Save Cart not possible for Anonymous Session Cart
	${sessionCart}=    get session cart
	Should Be Equal    ${sessionCart.name}    ${null}
	Should Be Equal    ${sessionCart.description}    ${null}
	Should Be Equal    ${sessionCart.saveTime}    ${null}
	Should Be Equal    ${sessionCart.savedBy}    ${null}
	Should Be Equal    ${sessionCart.expirationTime}    ${null}
	Run Keyword And Expect Error    CommerceSaveCartException: Anonymous carts cannot be saved*
	...    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"

### CUSTOMER SESSION CART: 

Test_Save_Cart_CustomerSessionCart_Name_Empty_AutoGenerated
	[Documentation]    Save Cart requires 2 parameters to be provided (name, description) - Testing: name = ${EMPTY}
	...                If any of these parameter's value is not provided, then will be automatically generated
	...                name: 8-digit number
	...                description: -
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	${savedCart}=    save cart with name "${EMPTY}" and description "${saveCartDescription1}"
	Should Match Regexp    ${savedCart.name}   \\d{8}
	Should be Equal    ${savedCart.description}   ${saveCartDescription1}
	Should be Equal    ${savedCart.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart.saveTime}    ${null}
	Should Not Be Equal    ${savedCart.expirationTime}    ${null}
	verify that date "${savedCart.expirationTime}" is "${expirationDays}" days later than date "${savedCart.saveTime}"
	
Test_Save_Cart_CustomerSessionCart_Description_Empty_AutoGenerated
	[Documentation]    Save Cart requires 2 parameters to be provided (name, description) - Testing: description = ${EMPTY}
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	${savedCart}=    save cart with name "${saveCartName1}" and description "${EMPTY}"
	Should Match Regexp    ${savedCart.name}   ${saveCartName1}
	Should be Equal    ${savedCart.description}   -
	Should be Equal    ${savedCart.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart.saveTime}    ${null}
	Should Not Be Equal    ${savedCart.expirationTime}    ${null}
	verify that date "${savedCart.expirationTime}" is "${expirationDays}" days later than date "${savedCart.saveTime}"

Test_Save_Cart_CustomerSessionCart_NameAndDescription_Empty_AutoGenerated
	[Documentation]    Save Cart requires 2 parameters to be provided (name, description) - Testing: name AND description = ${EMPTY}
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	${savedCart}=    save cart with name "${EMPTY}" and description "${EMPTY}"
	Should Match Regexp    ${savedCart.name}   \\d{8}
	Should be Equal    ${savedCart.description}   -
	Should be Equal    ${savedCart.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart.saveTime}    ${null}
	Should Not Be Equal    ${savedCart.expirationTime}    ${null}
	verify that date "${savedCart.expirationTime}" is "${expirationDays}" days later than date "${savedCart.saveTime}"

Test_Save_Cart_CustomerSessionCart_NameAndDescription_Provided
	[Documentation]    Testing: Save Cart for Customer Session Cart
	...                Verification of provided name and description parameters and other: saveTime, savedBy, expirationTime
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	Should Be Equal    ${sessionCart.name}    ${null}
	Should Be Equal    ${sessionCart.description}    ${null}
	Should Be Equal    ${sessionCart.saveTime}    ${null}
	Should Be Equal    ${sessionCart.savedBy}    ${null}
	Should Be Equal    ${sessionCart.expirationTime}    ${null}
	login customer with id "${customerId}"
	${savedCart}=    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"
	# Verify Saved Cart:
	Should be Equal    ${savedCart.name}   ${saveCartName1}
	Should be Equal    ${savedCart.description}   ${saveCartDescription1}
	Should be Equal    ${savedCart.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart.saveTime}    ${null}
	Should Not Be Equal    ${savedCart.expirationTime}    ${null}
	verify that date "${savedCart.expirationTime}" is "${expirationDays}" days later than date "${savedCart.saveTime}"
	# Verify Session Cart:
	${sessionCart}=    get session cart
	Should be Equal    ${sessionCart.name}   ${saveCartName1}
	Should be Equal    ${sessionCart.description}   ${saveCartDescription1}
	Should be Equal    ${sessionCart.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${sessionCart.saveTime}    ${null}
	Should Not Be Equal    ${sessionCart.expirationTime}    ${null}
	verify that date "${sessionCart.expirationTime}" is "${expirationDays}" days later than date "${sessionCart.saveTime}"

Test_Save_Cart_CustomerSessionCart_CartCode_CorrectProvided
	[Documentation]    Testing: Save Cart for Customer Session Cart
	...                Verification of savedCart.code that was provided as a parameter for Save Cart
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	${savedCart}=    save given cart "${sessionCart.code}" with name "${saveCartName1}" and description "${saveCartDescription1}"
	# savedCart.code:
	Should be Equal    ${savedCart.code}   ${sessionCart.code}

Test_Save_Cart_CustomerSessionCart_CartCode_IncorrectProvided_Exception
	[Documentation]    Testing: Save Cart for Customer Session Cart
	...                Verification expected exception due to incorrect(non-existing) cart code provided as a parameter when saving cart
	${incorrectCartCode}=    Set Variable    incorrectCartCode
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	Run Keyword And Expect Error    CommerceSaveCartException: Cannot find a cart for code [${incorrectCartCode}]
	...    save given cart "${incorrectCartCode}" with name "${saveCartName1}" and description "${saveCartDescription1}"

Test_Save_Cart_CustomerSessionCart_CartCode_NotProvided
	[Documentation]    Testing: Save Cart for Customer Session Cart
	...                Verification of savedCart.code that if was nt provided for Save Cart, is automatically provided as current cart session code 
	${sessionCart}=    get session cart
	create customer "${customerId}" with currency "USD"
	login customer with id "${customerId}"
	${savedCart}=    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"
	# savedCart.code:
	Should be Equal    ${savedCart.code}   ${sessionCart.code}

Test_Save_Cart_CustomerSessionCart_MultipleCustomers
	[Documentation]    Testing: Save Cart for multiple customers
	...                Verification of parameters for each Session Cart
	create customer "${customerId}" with currency "USD"
	create customer "${customerId2}" with currency "USD"	
	${sessionCart1}=    get session cart
	login customer with id "${customerId}"
	${savedCart1}=    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"
	login customer with id "${customerId2}"	
	${sessionCart2}=    create new session cart
	#login customer with id "${customerId}"
	${savedCart2}=    save cart with name "${saveCartName2}" and description "${saveCartDescription2}"
	# Verify savedCart1 for ${customerId}:
	Should be Equal    ${savedCart1.name}   ${saveCartName1}
	Should be Equal    ${savedCart1.description}   ${saveCartDescription1}
	Should be Equal    ${savedCart1.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart1.saveTime}    ${null}
	Should Not Be Equal    ${savedCart1.expirationTime}    ${null}
	verify that date "${savedCart1.expirationTime}" is "${expirationDays}" days later than date "${savedCart1.saveTime}"
	# Verify savedCart2 for ${customerId2}:
	Should be Equal    ${savedCart2.name}   ${saveCartName2}
	Should be Equal    ${savedCart2.description}   ${saveCartDescription2}
	Should be Equal    ${savedCart2.savedBy.uid}   ${customerId2}
	Should Not Be Equal    ${savedCart2.saveTime}    ${null}
	Should Not Be Equal    ${savedCart2.expirationTime}    ${null}
	verify that date "${savedCart2.expirationTime}" is "${expirationDays}" days later than date "${savedCart2.saveTime}"

Test_Save_Cart_CustomerSessionCart_NewSessionCart_No1
	[Documentation]    Testing: Save Cart for newly created Session Cart
	...                Verification of parameters for old and new Session Cart
	create customer "${customerId}" with currency "USD"
	${sessionCart1}=    get session cart
	login customer with id "${customerId}"
	${savedCart1}=    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"
	${sessionCart2}=    create new session cart
	#login customer with id "${customerId}"
	${savedCart2}=    save cart with name "${saveCartName2}" and description "${saveCartDescription2}"
	# Verify savedCart1:
	Should be Equal    ${savedCart1.name}   ${saveCartName1}
	Should be Equal    ${savedCart1.description}   ${saveCartDescription1}
	Should be Equal    ${savedCart1.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart1.saveTime}    ${null}
	Should Not Be Equal    ${savedCart1.expirationTime}    ${null}
	verify that date "${savedCart1.expirationTime}" is "${expirationDays}" days later than date "${savedCart1.saveTime}"
	# Verify savedCart2:
	Should be Equal    ${savedCart2.name}   ${saveCartName2}
	Should be Equal    ${savedCart2.description}   ${saveCartDescription2}
	Should be Equal    ${savedCart2.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart2.saveTime}    ${null}
	Should Not Be Equal    ${savedCart2.expirationTime}    ${null}
	verify that date "${savedCart2.expirationTime}" is "${expirationDays}" days later than date "${savedCart2.saveTime}"

Test_Save_Cart_CustomerSessionCart_NewSessionCart_No2
	[Documentation]    Testing: Save Cart for newly created Session Cart - 3 new Session Carts created in a row
	...                Verification of parameters for old and new Session Cart
	create customer "${customerId}" with currency "USD"
	${sessionCart1}=    get session cart
	login customer with id "${customerId}"
	${savedCart1}=    save cart with name "${saveCartName1}" and description "${saveCartDescription1}"
	${sessionCart2}=    create new session cart
	${savedCart2}=    save cart with name "${saveCartName2}" and description "${saveCartDescription2}"
	${sessionCart3}=    create new session cart
	${savedCart3}=    save cart with name "CartNameNo3" and description "CartNo3Description"
	${sessionCart4}=    create new session cart
	${savedCart4}=    save cart with name "${EMPTY}" and description "${EMPTY}"
	# Verify savedCart1:
	Should be Equal    ${savedCart1.name}   ${saveCartName1}
	Should be Equal    ${savedCart1.description}   ${saveCartDescription1}
	Should be Equal    ${savedCart1.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart1.saveTime}    ${null}
	Should Not Be Equal    ${savedCart1.expirationTime}    ${null}
	verify that date "${savedCart1.expirationTime}" is "${expirationDays}" days later than date "${savedCart1.saveTime}"
	# Verify savedCart2:
	Should be Equal    ${savedCart2.name}   ${saveCartName2}
	Should be Equal    ${savedCart2.description}   ${saveCartDescription2}
	Should be Equal    ${savedCart2.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart2.saveTime}    ${null}
	Should Not Be Equal    ${savedCart2.expirationTime}    ${null}
	verify that date "${savedCart2.expirationTime}" is "${expirationDays}" days later than date "${savedCart2.saveTime}"
	# Verify savedCart3:
	Should be Equal    ${savedCart3.name}   CartNameNo3
	Should be Equal    ${savedCart3.description}   CartNo3Description
	Should be Equal    ${savedCart3.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart3.saveTime}    ${null}
	Should Not Be Equal    ${savedCart3.expirationTime}    ${null}
	verify that date "${savedCart3.expirationTime}" is "${expirationDays}" days later than date "${savedCart3.saveTime}"
	# Verify savedCart4:
	Should Match Regexp    ${savedCart4.name}   \\d{8}
	Should be Equal    ${savedCart4.description}   -
	Should be Equal    ${savedCart4.savedBy.uid}   ${customerId}
	Should Not Be Equal    ${savedCart4.saveTime}    ${null}
	Should Not Be Equal    ${savedCart4.expirationTime}    ${null}
	verify that date "${savedCart4.expirationTime}" is "${expirationDays}" days later than date "${savedCart4.saveTime}"	