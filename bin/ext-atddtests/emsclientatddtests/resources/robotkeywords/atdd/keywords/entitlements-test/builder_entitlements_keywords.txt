*** Settings ***
Library         com.hybris.services.entitlements.atdd.keywords.EntitlementsBuilderKeywordLibrary


*** Keywords ***
create entitlement with entitlementType "${entitlementType:[^"]+}" for user "${user:[^"]+}"
    [Documentation]    Creates entitlement with given entitlement type for given user - BUILDER STEP 1
    ...                INPUT:
    ...                ${entitlementType} - type of entitlement (ENT_STR/ENT1/ENT_TIME/ENT_METERED/...)
    ...                ${user} - id of user (generated by KW call: ${userId} =     generate random id)
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure
    ${entitlement}=    create entitlement    ${entitlementType}     ${user}
    [Return]    ${entitlement}

assign grantSource "${grantSource:[^"]+}" to entitlement "${entitlement:[^"]+}"
    [Documentation]    Sets grant source to existing entitlement - BUILDER STEP 2 (OPTIONAL)
    ...                INPUT:
    ...                ${grantSource} - grant source (any string)
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    set grant source    ${entitlement}    ${grantSource}
    [Return]    ${entitlement}

assign grantSourceId "${grantSourceId:[^"]+}" to entitlement "${entitlement:[^"]+}"
    [Documentation]    Sets grant source id to existing entitlement - BUILDER STEP 2 (OPTIONAL)
    ...                INPUT:
    ...                ${grantSourceId} - grant source id (any string)
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    set grant source id    ${entitlement}    ${grantSourceId}
    [Return]    ${entitlement}

assign grant time "${grantTime:[^"]+}" to entitlement "${entitlement:[^"]+}"
    [Documentation]    Sets optional grant time to existing entitlement - BUILDER STEP 2 (OPTIONAL)
    ...                INPUT:
    ...                ${grantTime} - grant id (any string)
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    set grant time    ${entitlement}    ${grantTime}
    [Return]    ${entitlement}

add condition "${condition:[^"]+}" to entitlement "${entitlement:[^"]+}"
    [Documentation]    Appends given condition to existing entitlement - BUILDER STEP 3
    ...                Needs to remove all conditions first by executing KW: remove all conditions from entitlement "${entitlement}",
    ...                because updating entitlement with new conditions is not overwriting old ones, but just adding new to existing ones.
    ...                It is possible to add more than 1 condition by calling this KW few times - one by one
    ...                INPUT:
    ...                ${condition} - condition for entitlement, examples:
    ...                1)String condition: "string" condition with parameters {"string":"abc"}
    ...                2)Path condition: "path" condition with parameters {"path":"/root"}
    ...                3)Timeframe condition: "timeframe" condition with parameters {"startTime":"2010-01-01T00:00:00Z","endTime":"2010-01-01T00:00:02Z"}
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    add condition    ${entitlement}    ${condition}
    [Return]    ${entitlement}

grant entitlement "${entitlement:[^"]+}"
    [Documentation]    Grants entitlement - BUILDER STEP 4
    ...                INPUT:
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    grant entitlement    ${entitlement}
    [Return]    ${entitlement}

remove all conditions from entitlement "${entitlement:[^"]+}"
    [Documentation]    Removes all conditions from existing entitlement - BUILDER STEP 5
    ...                Is necessary in case of updating entitlement by adding conditions, because updating entitlement with new conditions is not overwriting old ones,
    ...                but just adding new to existing ones
    ...                INPUT:
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                ${entitlement} - automatically generated unique entitlement structure(overwrites the given one as input)
    ${entitlement}=    remove all conditions    ${entitlement}
    [Return]    ${entitlement}

update entitlement "${entitlement:[^"]+}"
    [Documentation]    Updates existing entitlement - BUILDER STEP 6
    ...                INPUT:
    ...                ${entitlement} - unique entitlement structure (generated by KW call: create entitlement with entitlementType "${entitlementType}" for user "${user}")
    ...                OUTPUT:
    ...                none
    update entitlement    ${entitlement}

