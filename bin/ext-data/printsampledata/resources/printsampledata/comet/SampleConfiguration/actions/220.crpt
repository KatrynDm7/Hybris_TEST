/*
	Script           :  220
	Description      :  Create Preview images for pages in a chapter
*/

#include "internal/types.h"
#include "internal/products.h"
#include "internal/text.h"
#include "[soap]/actions/601.crpt"

int main ()
{
	int err = 0; //errorcode, 0 is ok, all other are bad
	int pageID1 = 0, pageID2 = 0, pageID3 = 0;
	char *pageStringID = alloc(256);

	int imageID = 0, classID = 0, forceDelete = 0, panelStatementID = 0, docID = 0, gridID = 0, gridElementID = 0, pageItemID = 0;
	char *productNumber = alloc(256), *productName = alloc(256), *masterpage = alloc(256), *gridName = alloc(256), *gridElementName = alloc(256);
	
	int pageStart = 1;
	
	Product chapter; 

	Query qu;

	wlog("", "----------------------------------------  build chapter previews for jobid %d ---------------------------------------- \n", gJobID);
	qu = sql::query( soap::connection() );
	if( qu ) //estabishing connection was successful
	{
		// build query
		//each successfully send/input retuns 1 (don't ask me why) - so add them and when err == 4 all is ok
		err = query::send(qu, "getSubProductList1 \n");
		err = err + query::send(qu, "type = \"ChapterPreviewProductList\" AND \n");
		err = err + query::send(qu, "jobid = ?");
		err = err + query::input(qu, kInt, gJobID);
		if( err != 4 )
		{
			wlog("", "There were %i query send/input errors in 220.crpt! \n", (4-err));
			err = 4-err;
		}
		else
		{
			query::output( qu, kInt, &pageID1 );		// ID1
			query::output( qu, kInt, &pageID2 );		// ID2
			query::output( qu, kInt, &pageID3 );		// ID3
			query::output( qu, kInt, &imageID );		// image ID
			query::output( qu, kInt, &classID );		// class ID
			query::output( qu, kString, productNumber, 256 );// Product number
			query::output( qu, kString, productName, 256 );	// Product name
			query::output( qu, kInt, &forceDelete );	// force delete
			query::output( qu, kInt, &panelStatementID );	// panel statement ID der untergeordneten Baumabfrage
			query::output( qu, kInt, &docID );		// doc ID
			query::output( qu, kString, masterpage, 256 );	// masterpage
			query::output( qu, kString, gridName, 256 );	// grid
			query::output( qu, kString, gridElementName, 256 );	// grid element
			query::output( qu, kInt, &gridID );		// grid ID
			query::output( qu, kInt, &gridElementID );	// grid element ID
			query::output( qu, kInt, &pageItemID );		// layoutTemplateID
			query::output( qu, kString, pageStringID, 256 );// String ID
			
			// here we have pages
			// iterate over pages, process each page and create image preview for page
			if( query::exec (qu) )
			{
				// get result and iterate over them
				while (query::fetch (qu))
				{
					CREATE_FILL_PAGES = 0;
					processItem( createProduct( pageID1, pageID2, pageID3, pageStringID, productNumber, productName, masterpage, pageItemID, gridID, gridName, gridElementID, gridElementName, 0 ) );
					document::repaint();
					if(pageStart <= document::pages(gDocument))
					{
						err = createPreviewImages( pageStringID, pageStart, document::pages(gDocument), 1 );	
						pageStart = document::pages(gDocument) + 1;
					}
					if( err != 0 )
					{
						wlog("", "Error [%i], message: [%s], from method createPreviews() in 220.crpt! Aborting! \n", err, serror(err));
						break;
					}
					CREATE_FILL_PAGES = 1;
					
				}
			}
        }
    }
	else
	{
		wlog("", "Establishing sql query / soap connection was not successful! error in method main() in 220.crpt \n");
	}

	//shutdown the connection
	err = query::close(qu);
	if( err != 0 )
	{
		wlog("", "Error [%i], message: [%s], during closing the query! error in method main() in 220.crpt \n", err, serror(err));
	}

	wlog("", "----------------------------------------  chapter previews for jobid %d done ---------------------------------------- \n", gJobID);

	release( pageStringID );
	release( productNumber );
	release( productName );
	release( masterpage );
	release( gridName );
	release( gridElementName );

	return 0;
}
 