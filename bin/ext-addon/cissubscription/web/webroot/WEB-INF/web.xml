<?xml version="1.0" encoding="iso-8859-1"?>
<web-app version="2.5"
	metadata-complete="true"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>cissubscription</display-name>

	<!--
	 We have to explicitly clear the welcome file list.
	 We don't need to serve a default or index page as we can handle all the requests via spring MVC.
	-->
	<welcome-file-list>
		<welcome-file/>
	</welcome-file-list>
	
	<!--
	   Enabling a Spring web application context with 'session' and 'request' scope.
	   - The 'contextConfigLocation' param specifies where your configuration files are located.
	   - The HybrisContextLoaderListener extends the usual ContextLoaderListener (which loads
	      the context from specified location) by adding the core application context of
	      the platform as parent context. With having the global context set as parent you can access
	      or override beans of the global context.
	   - The RequestContextListener is needed for exposing the 'request' scope to the context.
	 -->
	<context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>WEB-INF/cissubscription-web-spring.xml</param-value>
	</context-param>
	 
	<listener>
	   <listener-class>de.hybris.platform.spring.HybrisContextLoaderListener</listener-class>
	</listener>
	 
	<listener>
	   <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- filters -->

	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
    	<filter-name>cissubscriptionFilterChain</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>      
	</filter>
	
	<filter-mapping>
    	<filter-name>cissubscriptionFilterChain</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- servlets -->
	
	<servlet>
		<description>
			DispatcherServlet
			Spring MVC dispatcher servlet. This is the entry point for the Spring MVC application.
		</description>
		<servlet-name>cissubscription</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<description>
				Specifies the location for Spring MVC to load an additional XML configuration file.
				Because hybris is already configured with the XML spring configuration files to load
				we must set this param value to EMPTY in order to prevent loading of the default
				/WEB-INF/applicationContext.xml file.
			</description>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>cissubscription</servlet-name>
		<!-- Map all requests to the DispatcherServlet -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
