# -----------------------------------------------------------------------
# [y] hybris Platform 
# 
# Copyright (c) 2000-2014 hybris AG
# All rights reserved.
#  
# This software is the confidential and proprietary information of hybris 
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with hybris.
#
#  
# -----------------------------------------------------------------------

# you can put key/value pairs here.
# Use Config.getParameter(..) to retrieve the values during runtime.

cisclient.key=value


# -----------------------------------------------------------------------
# CIS client Service Deployment Mode (onpremise|ondemand)
#
cisclient.deployment.mode=onpremise


# -----------------------------------------------------------------------
# AVS
#

avs.client.endpoint.uri=http://localhost:8080/avsService/avs/avsService/

# -----------------------------------------------------------------------
# SHIPPING
#

shipping.client.endpoint.uri=http://localhost:8080/shippingService/shipping/shippingService/

# client property configuration - mock
cis.rest.mock.shipping.createShipmentLocation=http://someurl/shipments
cis.rest.mock.shipping.labelLocation=http://someurl/labels


# -----------------------------------------------------------------------
# GEOLOCATION
#

geolocation.client.endpoint.uri=http://localhost:8080/

# client configuration properties - mock
cis.rest.mock.geolocation.geolocationResponseLocation=http://localhost:8080


# -----------------------------------------------------------------------
# TAX
#

tax.client.endpoint.uri=http://localhost:8080/taxService/tax/taxService/

cis.rest.mock.tax.adjustLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.tax.cancelLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.tax.existsLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.tax.invoiceLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.tax.postLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.tax.quoteLocation=http://someurl/tax/posts/TEST-ORDER-1-SHIPMENT-1/
cis.rest.mock.payment.pspUrl=https://electronics.local:9002/acceleratorservices/sop-mock/process


# -----------------------------------------------------------------------
# FRAUD
#

fraud.client.endpoint.uri=http://localhost:8080/fraudService/fraud/fraudService/

# client properties
cis.rest.mock.fraud.calcuateFraudScoreLocation=http://someurl/fraudscore
cis.rest.mock.fraud.generateFraudReportLocation=http://someurl/fraudreport
cis.rest.mock.fraud.orderStatusUpdateLocation=http://someurl/orderstatus


# -----------------------------------------------------------------------
# PAYMENT
#

payment.client.endpoint.uri=http://localhost:8080/paymentService/psp/paymentService/

resource.psp.hpfurl.path=hpfurl
resource.psp.captures.path=captures
resource.psp.reverses.path=reverses
resource.psp.refunds.path=refunds
resource.psp.profiles.path=profiles
resource.psp.updates.path=statusupdates
resource.psp.sessions.path=paymentsessions
resource.psp.authorizationsgroups.path=authorizationsgroups
resource.psp.authorizations.path=authorizations

# mock client properties
cis.rest.mock.payment.addCustomerProfileLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/profiles/9997000011397391/
cis.rest.mock.payment.authorizeWithProfileLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizations/123/3418696812220176056470/
cis.rest.mock.payment.captureLocation=http://localhost:8080/hybris-cis-web/psp/cisPaymentCybersource/authorizations/9997000011397391/3366018809020178147616/captures/3370324349050176056428/
cis.rest.mock.payment.handleExternalAuthLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizations/1340818288264/3408182884520178147615/
cis.rest.mock.payment.pspUrlLocation=https://electronics.local:9002/acceleratorservices/sop-mock/process
cis.rest.mock.payment.reverseLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/clients/single/psp/cybersource/authorizations/9997000011397391/3372695160990176056428/reverses/3372695460280176056442/
cis.rest.mock.payment.refundLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/clients/single/psp/cisPaymentCybersource/authorizations/9997000011397391/3371203758930176056428/captures/3372703853520176056470/refunds/3372704888060176056470/
cis.rest.mock.payment.initPaymentSessionLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/paymentsessions/3427079770040176056470/
cis.rest.mock.payment.paymentOrderSetupLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizationsgroups/O-68K784427J893111J/
cis.rest.mock.payment.tokenizedAuthLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizationsgroups/O-68K784427J893111J/authorizations/90R12860324048315
cis.rest.mock.payment.tokenizedCaptureLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizationsgroups/O-68K784427J893111J/authorizations/90R12860324048315/captures/1H993482W00985358/
cis.rest.mock.payment.tokenizedRefundLocation=http://location:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizationsgroups/O-1PA938239U353804H/authorizations/4CA30305JC015291L/captures/9HD47813KN7193529/refunds/6A606551MX315692V/
cis.rest.mock.payment.tokenizedReverseLocation=http://localhost:8080/hybris-cis-cybersource-payment-web/psp/cisPaymentCybersource/authorizationsgroups/O-18D02463NT784360Y/authorizations/11G11443E61894039/reverses/3430661984840176056470/
cis.rest.mock.payment.pspUrl=https://electronics.local:9002/acceleratorservices/sop-mock/process
cis.mock.payment.hpfurl=http://mockedsopurl

# -----------------------------------------------------------------------
# Spring configuration depending on the mode
# this could produce : cis-onpremise_client-application-context
#                      cis-ondemand_client-application-context
cisclient.application-context=cis-${cisclient.deployment.mode}_client-application-context.xml

# -----------------------------------------------------------------------
# Mock configuration
#
cis.client.avs.mock=true
cis.rest.mock.avs.location=http://localhost:8080
cis.client.shipping.mock=true
cis.rest.mock.shipping.location=http://localhost:8080
cis.client.geolocation.mock=true
cis.rest.mock.geolocation.location=http://localhost:8080
cis.client.tax.mock=true
cis.rest.mock.tax.location=http://localhost:8080
cis.client.payment.mock=true
cis.rest.mock.payment.location=http://localhost:8080
cis.client.fraud.mock=true
cis.rest.mock.fraud.location=http://localhost:8080

#
# Sets whether an alternative endpointProvider then the SimpleEndpointProvider should be used.
# For being able to use this property you must configure the AlternativeEndpointProviderFactory in your spring setup.
# It is recommended to use it only if you will use the gateway on production but wants to avoid the gateway usage in developent!
#
hybris.rest.client.alternative=true

#
# Allow to use a proxy setup for the rest client.
# Possible values:
#  * 'auto' (default) proxy settings will be discovered based on system properties (http.proxyHost, http.proxyPort ...)
#  * 'none' - no proxy will be set
#  * a specific uri - this proxy will be used explicitly. example http://www.proxy.com:3128
#
hybris.rest.client.proxy=auto

#
# Connect timeout interval in milliseconds.
# A value of 0 is equivalent to an interval of infinity.
#
# @highlight
hybris.rest.client.httpclient.readTimeout=20000

#
# Sets the maximum number of connections allowed for the rest client.
#
hybris.rest.client.httpclient.connectionManager.maxConnectionsPerHost=20

#
# The maximum number of connections allowed.
#
hybris.rest.client.httpclient.connectionManager.maxTotalConnections=60

#
# The timeout in milliseconds used when retrieving an
# HTTP connection from the HTTP connection manager.
#
hybris.rest.client.httpclient.connectionManager.timeout=5000

#
# Enables the logging of each request/response done by the rest client.
# It will log url, headers and message body
#
# @highlight
hybris.rest.client.logging.enabled=false

#
# Tells the rest client as which service the client should act.
# Used only in external endpoint scenario with usage of gateway.
# The rest client will use the current service configuration to build the request URL,
# the gateway will extract it from the URL and will use it to lookup the related subscription configuration.
# Possible values are all service id's having a service descriptor
#
# @highlight
hybris.current.service=myService


#
#Enables HTTP Basic Authentication for Rest Calls.
#

hybris.security.http.basic.auth.enable=false
hybris.security.http.basic.auth.username=
hybris.security.http.basic.auth.password=

