
# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2000-2013 hybris AG
# All rights reserved.
#
# This software is the confidential and proprietary information of hybris
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with hybris.
# -----------------------------------------------------------------------

########################### CORE SETTINGS ######################################
#
# General platform settings.
#
########################################################################################

# Comma separated list of active Spring profiles.
spring.profiles.active=

# Configures a spring loading strategy for core beans. If value equals true every top-level bean is being assigned to be lazy initialized, 
#  otherwise default lazy initialization policy is used. For more datails see http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/beans.html#beans-factory-lazy-init
spring.lazy.load.singletons=false

# Configures a spring loading strategy for web beans. Meaning as above. 
web.spring.lazy.load.singletons=true

########################### CORE SETTINGS ######################################
#
# SAP license settings.
#
########################################################################################

# SAP licenses are generated holding customer specific System IDs ( SAPSYSTEM field within the license file ).
# In order to be able to validate a given SAP license this platform *must* know the correct System ID.
# As default we've chosen 'CPS' which will only work as long as the customer also chooses 'CPS' as System ID
# when generating its license! 
license.sap.sapsystem=CPS

######################### HYBRIS SERVER SETTINGS ###########################
#
# Configure the hybris Server that is a preconfigured server based on 
# Apache Tomcat for a development and production use. 
#
############################################################################

# A port that allows to access the hybris Multichannel Suite via an unsecured connection 
#tomcat.http.port=9001

# A port that allows to access the hybris Multichannel Suite via an SSL-secured connection 
#tomcat.ssl.port=9002

# A port that allows to access the hybris Multichannel Suite via AJP from an Apache server instance
#tomcat.ajp.port=8009

# A port that allows to access the hybris Multichannel Suite via AJP from an Apache server instance for secured connections
#tomcat.ajp.secureport=8010

# The port that proxy Apache server instance uses for unsecured connections. This is the publicly accessible HTTP port.
#proxy.http.port=80

# The port that proxy Apache server instance uses for SSL-secured connections. This is the publicly accessible HTTPS port.
#proxy.ssl.port=443

#Set this attribute to true to cause Tomcat to use the ServerName passed by the native web server to determine the Host to send the request to. If no attribute given, default value is false.
#tomcat.ajp.useipv=false

# A port that allows to access the hybris Multichannel Suite via JMX 
# For details see http://tomcat.apache.org/tomcat-6.0-doc/config/listeners.html, section JMX Remote Lifecycle Listener 
# you should be able to connect to your remote instance by using 
# service:jmx:rmi://<serveraddress>:9004/jndi/rmi://<serveraddress>:9003/jmxrmi
# See http://gabenell.blogspot.com/2010/04/connecting-to-jmx-on-tomcat-6-through.html for details, 
# By default the content of jmxremote.password defined in config/tomcat/conf ist used.
#tomcat.jmx.port=9003
#tomcat.jmx.server.port=9004


# The maximum number of request processing threads to be created by the Tomcat connector, 
# which therefore determines the maximum number of simultaneous requests that can be handled.
#tomcat.maxthreads=200

# The number of request processing threads that will be created when tomcat connector is first started. 
#tomcat.minsparethreads=40

# The number of milliseconds before an idle thread shutsdown, 
# unless the number of active threads are less or equal to tomcat.minsparethreads.
#tomcat.maxidletime=10000

# The maximum queue length for incoming connection requests when all possible request processing threads are in use. 
#tomcat.acceptcount=100

# Set to false for production use
# If set to true, for every bean definition causes to set as default to be lazy initialized.  
#tomcat.development.mode=true

# Java runtime options for the hybris Server in normal operation mode (hybrisserver.bat/hybrisserver.sh)
# Note that these settings are appended to the tomcat.generaloptions below
#tomcat.javaoptions=

# Java runtime options for the hybris Server in debug mode (hybrisserver.bat debug/hybrisserver.sh debug) 
# Note that these settings are appended to the tomcat.generaloptions below
#tomcat.debugjavaoptions=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n

# Java runtime options for the hybris Server used in both the normal and debug mode. 
# If you want to set language settings explicitly, add the following settings, otherwise the JVM settings are used:
## -Duser.language=en|de|fr|es etc.
## -Duser.country=US|FR|DE etc.
## -Duser.region=US|FR|DE etc.
## -Duser.timezone=CET|UTC|GMT etc.
#tomcat.generaloptions=-Xmx800M -ea -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true -Djava.endorsed.dirs="%CATALINA_HOME%/lib/endorsed" -Dcatalina.base=%CATALINA_BASE% -Dcatalina.home=%CATALINA_HOME% -Dfile.encoding=UTF-8 -Dlog4j.configuration=log4j_init_tomcat.properties -Djava.util.logging.config.file=jdk_logging.properties -Djava.io.tmpdir="${HYBRIS_TEMP_DIR}"

tomcat.context.template=${HYBRIS_CONFIG_DIR}/tomcat/tomcat_context.tpl

# The directory into which files created by "ant production" are created
#production.output.path=${HYBRIS_TEMP_DIR}/hybrisServer

# Choose the type of server: tomcat or tcserver
#bundled.server.type=tomcat

# Absolute path to tomcat
#bundled.tomcat.home=${platformhome}/tomcat

#Version of tomcat server
#bundled.tomcat.version=7.0.59

# Absolute path to tcserver
#bundled.tcserver.home=${platformhome}/tcServer

# tcserver's tomcat version
bundled.tcserver.tomcat.version=7.0.42.A.RELEASE

# Relative path to tcserver's tomcat
bundled.tcserver.tomcat.home=tomcat-${bundled.tcserver.tomcat.version}

# Name of an server instance
#bundled.tcserver.instance=instance1

# Name of an instance template to use: hybris or hybris_insight
#bundled.tcserver.template=hybris

 #-Dnet.sf.ehcache.skipUpdateCheck=true
tomcat.http.port=9001
tomcat.ssl.port=9002
tomcat.ajp.port=8009
tomcat.jmx.port=9003
tomcat.jmx.server.port=9004
tomcat.maxthreads=200
tomcat.minsparethreads=40
tomcat.maxidletime=10000
tomcat.acceptcount=100
tomcat.development.mode=true
tomcat.javaoptions=
tomcat.debugjavaoptions=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n
tomcat.generaloptions=-Xmx2G -ea -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true -Djava.endorsed.dirs="%CATALINA_HOME%/lib/endorsed" -Dcatalina.base=%CATALINA_BASE% -Dcatalina.home=%CATALINA_HOME% -Dfile.encoding=UTF-8 -Dlog4j.configuration=log4j_init_tomcat.properties -Djava.util.logging.config.file=jdk_logging.properties -Djava.io.tmpdir="${HYBRIS_TEMP_DIR}"
production.output.path=${HYBRIS_TEMP_DIR}/hybrisServer
bundled.server.type=tomcat
bundled.tomcat.home=${platformhome}/tomcat
bundled.tomcat.version=7.0.59
bundled.tcserver.home=${platformhome}/tcServer
bundled.tcserver.instance=instance1
bundled.tcserver.template=hybris

# If set to true all context entries are written to tomcat/conf/server.xml file. This is default behaviour.
# Otherwise separate file named [webroot].xml will be created for every extension containing web module.
tomcat.legacy.deployment=true

######################## DYNATRACE SETTINGS #####################################
#
# if you want to use dynatrace, add this line to tomcat.generaloptions:
# -agentpath:${dynatrace.agentlib}=name=${dynatrace.name},server=${dynatrace.server},wait=45,storage=.
# also be sure to uncomment the dynatrace settings below
#
#windows 32
#dynatrace.agentlib=${HYBRIS_BIN_DIR}/platform/resources/dynatrace/win/32/dtagent.dll
#windows 64
#dynatrace.agentlib=${HYBRIS_BIN_DIR}/platform/resources/dynatrace/win/64/dtagent.dll
#linux 32
#dynatrace.agentlib=${HYBRIS_BIN_DIR}/platform/resources/dynatrace/linux/32/libdtagent.so
#linux 64
#dynatrace.agentlib=${HYBRIS_BIN_DIR}/platform/resources/dynatrace/linux/64/libdtagent.so
#
#dynatrace.enabled=true
#dynatrace.name=hybris_<name>
#dynatrace.server=your.dynatrace.server.de (port optional)
#dynatrace.rest=localhost:8020
#dynatrace.username=admin
#dynatrace.password=admin

######################## DATABASE SETTINGS #####################################
#
# Configure your database
# The hybris Multichannel Suite supports several database systems, but only one of them may be active at a time:
# - HSQLDB (used by default and activated)
# - MySQL
# - Oracle SQL
# - Microsoft SQL Server

# --- Note: Do not forget to comment out all properties for databases other then HSQLDB if you want to use these settings.

# --- General notes:
# --- if your password contains the '#' character (e.g. tom#100, you can escape it with two
# --- leading '\\' (e.g. db.password = tom\\#100)

##### --- Database Connection Authentication --- #####
# There are two ways to configure the database connection that will be used. 
# You can either:
#-----------------------------------------------------------------------------# 
# 1) Configure all the necessary configuration values (database URL, driver, user, password and so on):
# The hybris Multichannel Suite always uses the database specified by the generic properties.
###-- Generic properties for different databases: --### 

# A path to access the database
#db.url=

# A fully qualified name of the JDBC driver class used to access the database
#db.driver=

# Database server authentication settings
# A name of the user account used to access the database and the matching password. 
# On production systems, it is recommended to use a non-privileged user account for security reasons.
#db.username=
#db.password=

# An optional String that precedes a set of table names in a database schema. 
# Specifying different table prefixes allows to create different logical sets of tables within one schema,
# and thus running several instances of the hybris Multichannel Suite on one single database schema.
#db.tableprefix=

# An optional String that indicates which type system should be used.
#db.type.system.name=DEFAULT

#-----------------------------------------------------------------------------# 
# or: 
# 2) Use a JNDI datasource application server, for example: Apache Tomcat, IBM WebSphere or Oracle WebLogic Server.
# To implement this authentication method, define the JNDI datasource in your Application Server.
# For information on how to do it, refer to the documentation of your application server manufacturer. 
# Configure the name of the JNDI datasource and specify target database type:
# db.pool.fromJNDI=java:comp/env/jdbc/hybrisDS
# db.pool.fromJNDI.dbtype=hsqldb|oracle|mysql|sqlserver|sap

# To change a database, copy the corresponding settings to the local.properties file and rebuild the hybris Multichannel Suite.
###############################################################################


##### --- Database settings for HSQLDB --- #####
# --- The HSQLDB database is bundled with the hybris Platform and does not need to be configured. See http://www.hsqldb.org.

# Set to true to enable using cached tables. See http://hsqldb.sourceforge.net/doc/guide/ch01.html#N1023C for more details.
#hsqldb.usecachedtables=true


db.url=jdbc:hsqldb:file:${HYBRIS_DATA_DIR}/hsqldb/mydb;shutdown=true;hsqldb.cache_rows=100000;hsqldb.cache_size=20000;hsqldb.write_delay_millis=1000;hsqldb.inc_backup=true;hsqldb.defrag_limit=2;hsqldb.nio_data_file=false
db.driver=org.hsqldb.jdbcDriver
db.username=sa
db.password=
db.tableprefix=
hsqldb.usecachedtables=true

##### --- Database settings for MySQL 5.1 --- #####
# --- The MySQL JDBC drivers are NOT bundled with the hybris Platform and need to added manually.
# --- Expected location: ${HYBRIS_BIN_DIR}/platform/lib/dbdriver.
# --- useConfigs=maxPerformance parameter loads all properties from the maxPerformance.properties file, 
# --- which contains optimized settings for combination of MySQL and the hybris Multichannel Suite.
# --- The property file is stored in the MySQL connector driver mysql-connector-java-5.x-bin.jar,
# --- (com/mysql/jdbc/configs directory) that is expected under:
# --- ${HYBRIS_BIN_DIR}/platform/lib/dbdriver and used by default. 
 

# --- IMPORTANT NOTE WHEN USING MYSQL BELOW.
#
# --- WARNING! The default and recommended tabletype is InnoDB.
# --- Please make sure your MySQL setting 'innodb_flush_log_at_trx_commit' is set to 0.
# --- (Use MySQL Administrator or add 'innodb_flush_log_at_trx_commit=0' to your my.cnf.
# --- You have a MASSIVE decrease of performance if you do not change the default value
# --- leaving your system unusable for most tasks.
# ---
# --- IMPORTANT NOTE WHEN USING MYSQL ABOVE.

## Additional run-time parameters for the MySQL database
#mysql.optional.tabledefs=CHARSET=utf8 COLLATE=utf8_bin

## A type of MySQL database tables, for example InnoDB for transactional or MyISAM for non-transactional tables 
#mysql.tabletype=InnoDB

## Set this property to true if MySQL 5.6.4 or later is used. It allows to create datetime columns which support
## fractional seconds.
#mysql.allow.fractional.seconds=false

#db.url=jdbc:mysql://localhost/<dbname>?useConfigs=maxPerformance&characterEncoding=utf8
#db.driver=com.mysql.jdbc.Driver
#db.username=<username>
#db.password=<password>
#db.tableprefix=
#db.customsessionsql=SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
#mysql.optional.tabledefs=CHARSET=utf8 COLLATE=utf8_bin
#mysql.tabletype=InnoDB
#mysql.allow.fractional.seconds=true


##### --- Database settings for Oracle 10gR2, 11g --- #####
# --- The Oracle JDBC drivers are bundled with the hybris Platform and do not need to be configured.

## When using Oracle RAC, you have to specify every single node of the Oracle RAC cluster explicitly, for example:
## db.url=jdbc:oracle:thin:@(DESCRIPTION=(LOAD_BALANCE=ON)(FAILOVER=ON)(ENABLE=BROKEN)
###(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(Host=$Node_1)(Port=1521)) ... (ADDRESS=(PROTOCOL=TCP)(Host=$Node_N)(Port=1521)))
##(CONNECT_DATA=(SERVICE_NAME=$ORACLE_SERVCE_NAME)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(DELAY=5)(RETRIES=36))))
## Every $Node entry should be replaced by a node IP address. Nodes that are not explicitly specified are not used. 

## Use the oracle.globalTableOptions and oracle.globalIndexOptions to add parameters to your
## CREATE TABLE and CREATE INDEX script. (See https://jira.hybris.com/browse/PLA-9146)
##example: oracle.globalTableOptions=TABLESPACE ts_Data PCTFREE 40 INITRANS 2 MAXTRANS 8
##example: oracle.globalIndexOptions=TABLESPACE ts_index PCTFREE 40 INITRANS 16 MAXTRANS 255 GLOBAL PARTITION BY HASH (@INDEXCOLUMNS@) PARTITIONS 257 PARALLEL 16 NOLOGGING

#db.url=jdbc:oracle:thin:@<host>:1521:<sid>
#db.driver=oracle.jdbc.driver.OracleDriver
#db.username=<username>
#db.password=<password>
#db.tableprefix=
#oracle.statementcachesize=0
## custom oracle connection parameters always set by hybris -> override to change
#db.connectionparam.SetBigStringTryClob=true
#db.connectionparam.oracle.jdbc.TcpNoDelay=true
## custom oracle connection parameters which may increase CLOB performance with thin driver -> uncomment to enable 
#db.connectionparam.defaultRowPrefetch=50
#db.connectionparam.useFetchSizeWithLongColumn=true


##### --- Database settings for Microsoft SQLServer 2008 --- #####
# --- The Microsoft JDBC drivers for SQLServer are bundled with the hybris Platform and do not need to be configured.

#db.url=jdbc:sqlserver://<host>:1433;databaseName=<dbname>;responseBuffering=adaptive;loginTimeout=10
#db.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#db.username=<username>
#db.password=<password>
#db.tableprefix=
##Following property allows enabling limit support for SQL Server 2012
#sqlserver.enableLimitSupportForSQLServer2012=false

##### --- Database settings for Sap Hana db --- #####
#db.url=jdbc:sap://<host>:30015?reconnect=true
#db.driver=com.sap.db.jdbc.Driver
#db.username=<username>
#db.password=<password>

# defines the storage type of hana db. Setting to 'true' means switching to column-based storage. Default is 'false', which means - row based.
# default setting as SAP recommends is true (column based)
hanadb.storage.columnbased=true

# SAP's recommended  optimization to avoid creation of the non-unique indexes which really are not needed by HANA in column based storage
# if set to true all non unique indices (for data consistency) are skipped
hanadb.storage.optimized.indexes=true

# defines the memory threshold in bytes for LOB column types on HANA database
hanadb.lob.memory.threshold=1000

########################## INITIALIZATION SETTINGS ############################
#
# These parameters allow for customization of the initialization process
# 
###############################################################################

# Use the new DDL / DML script based initialization.
initialization.legacy.mode=false

########################## KEY GENERATOR SETTINGS #############################
#
# These parameters allow for customization of some standard generated keys.
# 
###############################################################################

# for pseudo-unique codes use something like that ( @ -> system pk, $ -> actual number ) 
#keygen.order.code.template=ACC-@-$-DE

# order

keygen.order.code.name=order_code
keygen.order.code.digits=8
keygen.order.code.start=00000000
keygen.order.code.type=numeric
keygen.order.code.template=$

# comments

keygen.comments.code.name=ext.comments
keygen.comments.code.digits=8
keygen.comments.code.start=00000000
keygen.comments.code.type=alphanumeric
keygen.comments.code.template=$

# media

keygen.media.code.name=media_code
keygen.media.code.digits=8
keygen.media.code.start=00000000
keygen.media.code.type=numeric
keygen.media.code.template=$
	
# cronjob
		
keygen.cronjob.code.name=ext.cronjob.cronjob
keygen.cronjob.code.digits=8
keygen.cronjob.code.start=00000000
keygen.cronjob.code.type=alphanumeric
keygen.cronjob.code.template=$
		
# process
		
keygen.process.code.name=PROCESS
keygen.process.code.digits=8
keygen.process.code.start=00000000
keygen.process.code.type=alphanumeric
keygen.process.code.template=$

# workflow

keygen.workflow.code.name=ext.workflow.workflow
keygen.workflow.code.digits=6
keygen.workflow.code.start=000000
keygen.workflow.code.type=alphanumeric
keygen.workflow.code.template=$

keygen.workflow_action.code.name=ext.workflow.action
keygen.workflow_action.code.digits=8
keygen.workflow_action.code.start=00000000
keygen.workflow_action.code.type=alphanumeric
keygen.workflow_action.code.template=$

keygen.workflow_decision.code.name=ext.workflow.decision
keygen.workflow_decision.code.digits=8
keygen.workflow_decision.code.start=00000000
keygen.workflow_decision.code.type=alphanumeric
keygen.workflow_decision.code.template=$

keygen.workflow_attachment.code.name=ext.workflow.attachment
keygen.workflow_attachment.code.digits=6
keygen.workflow_attachment.code.start=000000
keygen.workflow_attachment.code.type=alphanumeric
keygen.workflow_attachment.code.template=$

# customer

keygen.customer.customer_id.name=customer_id
keygen.customer.customer_id.digits=8
keygen.customer.customer_id.start=00000000
keygen.customer.customer_id.type=alphanumeric
keygen.customer.customer_id.template=$

# ContactInfo

keygen.contact_info.code.name=contact.info.code
keygen.contact_info.code.digits=8
keygen.contact_info.code.start=00000000
keygen.contact_info.code.type=alphanumeric
keygen.contact_info.code.template=$

########################## HIGH PERFORMANCE SETTINGS ###########################
#
# The following settings can only be changed if you have licenced the hybris
# High Performance Module, otherwise changes will not have any effect.
#
###############################################################################

# Maximum cache entries of the hybris instances
# We recommend setting this up to 500000 if you have >5G available for your VM
# (Note: you need to have a valid hybris High Performance Module licence for that)
cache.main=20000

# The number of ImpEx worker threads to speed up ImpEx file 
# processing on multicore machines
# This property might be set to an expression. #cores variable will be substituted
# by a number of available cores.
impex.import.workers=#cores * 2

# The number of catalog sync worker threads
# to speed up Catalog synchronization on multicore machines
# This property might be set to an expression. #cores variable will be substituted
# by a number of available cores.
catalog.sync.workers=#cores * 2


########################### LOCALIZATION SETTINGS ######################################
#
# Configuration settings to control localization from additioanl lang pack zip files
# Keep in mind that default english language localization is created by default so there
# is no need to put en ISO code here.   
#
########################################################################################

lang.packs=de,en,es,es_CO,fr,it,ja,ko,pt,ru,zh,zh_TW,hi,id

# This property allows you to enable jdbc based type system localization.
types.localization.jdbc.mode.enabled=true

# Jdbc based localization can run on multiple threads. This property allows you to
# specify number of threads used by localization process.
types.localization.jdbc.number.of.threads=#cores

########################### MEDIA STORAGE SETTINGS #####################################
#
# Configuration settings to control media storage
#
########################################################################################

# default storage strategy to be used for all folders without specific config
media.default.storage.strategy=localFileMediaStorageStrategy

# default url strategy to be used for all folders without specific config
media.default.url.strategy=localMediaWebURLStrategy

# specifies whether data from non-local strategies is cached
media.default.local.cache=true
# specifies root cache folder for all cached files
media.default.local.cache.rootCacheFolder=cache
# specifies max size of media cache in MB
media.default.local.cache.maxSize=500

# specifies whether media folders are secured
media.default.secured=false

# specifies depth of subdirectories when media have to be stored in hierarchical way 
# (allowed values are 0 upto 4, 0 means no subdirectories)  
media.default.hashing.depth=2

# unique per installation salt which will be used for computing hashes for media locations
media.default.storage.location.hash.salt=35b5cd0da3121fc53b4bc84d0c8af2e81

# specifies whether local file storage should be cleaned out completely on fresh initialization
media.globalSettings.localFileMediaStorageStrategy.cleanOnInit=true

# Setup for custom MediaFolder foo
# 
# media.folder.foo.storage.strategy=localFileMediaStorageStrategy
# media.folder.foo.hashing.depth=2

########################### WEB-ROOT SETTINGS ##########################################
#
# You can change the default webroot setting for your modules when deploying in bundled
# Tomcat. You do NOT have to edit the extensioninfo.xml.
# If no tenant id given master tenant is used.
# 
# To set the webroot for each tenant, please edit the platform/tenant_<tenantID>.properties or config/local_tenant_<tenantID>.properties: 
# <extname>.webroot=/webroot
#
########################################################################################

# Sets the webroot path for the hybris administration console to the specified value for tenant master
#hac.webroot=/hac

# Sets the webroot path for the hybris administration console to the specified value for tenant backend
# please edit the platform/tenant_backend.properties or config/local_tenant_backend.properties:
#hac.webroot=/hacBackend


########################### WEB-SECURITY SETTINGS ######################################
#
# Here web related security settings can be found.
#
########################################################################################
# enable globally
xss.filter.enabled=true
# override per extension:
# hac.xss.filter.enabled=false

# define action on violation matching globally
# STRIP .. strips all text occurrences which match the patterns below but allow 
#          processing the request (default)
# REJECT.. if any pattern matches the whole request gets rejected with the  BAD REQUEST 
#          error code
xss.filter.action=STRIP
# override per extension
# hac.xss.filter.action=REJECT

# our default rules 
xss.filter.rule.script_fragments=(?i)<script>(.*?)</script>
xss.filter.rule.src=(?ims)[\\s\r\n]+src[\\s\r\n]*=[\\s\r\n]*'(.*?)'
xss.filter.rule.lonely_script_tags=(?i)</script>
xss.filter.rule.lonely_script_tags2=(?ims)<script(.*?)>
xss.filter.rule.eval=(?ims)eval\\((.*?)\\)
xss.filter.rule.expression=(?ims)expression\\((.*?)\\)
xss.filter.rule.javascript=(?i)javascript:
xss.filter.rule.vbscript=(?i)vbscript:
xss.filter.rule.onload=(?ims)onload(.*?)=

# again, override per extension
# hac.xss.filter.rule.vbscript=

# development.mode disables CSRF protection on /platform/init (and related) urls
# it allows to initialize platform with a scripted POST call to /platform/init service
#
# production mode also enables loading production.properties for each extension
# if this mode is enabled each extension will load and merge properties from production.properties file
# besides project.properties. production.properties will be loaded AFTER project.properties so they can overwrite
# development settings
#
# You can change this property only in CONFIG_DIR, HYBRIS_RUNTIME_PROPERTIES or HYBRIS_OPT_CONFIG_DIR
# local.properties files, so changing it here will not work
development.mode=true


###################### CLASSPATH ANALYZER SETTINGS ##############################
#
# To use the class loading monitor feature, enable the following property 
# and set the value to "true" (case insensitive).
# Disable this feature by setting the value to "false" or comment out the property.
# ATTENTION: Remember to rebuild the hybris Platform after changing this property.
#
# classloader.monitor.enabled=true|false

###################### LINKS HANDLING SETTINGS ##############################
# 
# Enables links handling directly through jdbc. This flag by default is set to true.
#link.jdbc.mode.enabled=true|false

########################## CLUSTER SETTINGS ############################
#
# The hybris Cluster is composed of several instances of 
# the hybris Multichannel Suite with a shared database.
# See https://wiki.hybris.com/display/release4/Configuring+a+hybris+Cluster for details.
########################################################################

#
# Activate or deactivate cluster mode
clustermode=false

# A unique id of a cluster node can range between 0-63,
# however you should choose between 0-14 and 16-63.
# You can find special settings for that cluster node in this file that disable e.g.
# the cronjobs or use a smaller cache footprint.
# Assure that this id is really unique per node, otherwise cache can be in an inconsistent state.
cluster.id=0

#
# Cluster ID auto discovery: Regardless of cluster.id=... this option cause the hybris platform  
# to find a unused cluster node id automatically. This is done via storing cluster node information
# inside the database. Default is false.
cluster.nodes.autodiscovery=false
#
# Interval within each platform is updating its own cluster node record in database. 
# *Must* be smaller than 'cluster.nodes.stale.timeout' and should be *equal* in the whole cluster!
cluster.nodes.ping.interval=10000
#
# Time since last ping after which a node is considered to be stale / crashed. 
# These nodes may be re-assigned to newly starting platform instances!
# *Must* be bigger that 'cluster.nodes.ping.interval' and should be *equal* in the whole cluster! 
cluster.nodes.stale.timeout=30000


# Freqeuncy (in seconds) of pinging the network for new cluster nodes
cluster.ping.interval=60

# Whether this node should start handling and sending PING request on tenant startup.
# If false this node will not responde to PING requests until starting it manually at
# the hac cluster page!
cluster.ping.load.on.startup=true

# Specify one or more active broadcast methods: udp, jgroups
cluster.broadcast.methods=jgroups

# A number of workers for processing binary custom event messages
cluster.broadcast.worker.maxthreads=150

# Minimum number of active threads
cluster.broadcast.senderthreads.min=1

# Maximum number of active threads
cluster.broadcast.senderthreads.max=10

# Time (in seconds) to stay alive before unused thread is evicted
cluster.broadcast.senderthreads.keepalive=10

# A size of a queue of messages to be send 
cluster.broadcast.senderthreads.queuesize=10000

# Maximum time (in seconds) to wait if message queue is full before retrying
cluster.broadcast.senderthreads.maxwait=60

# The retry interval (in milliseconds) when message queue is full
cluster.broadcast.senderthreads.waitdelay=100

# Whether to use unfair or fair queue behaviour - default is false
# for better performance under high load.
cluster.broadcast.senderthreads.queue.fair=false

# Switches off own message queue and aysnchronous sending ( which is done by jGroups much better! ) 
cluster.broadcast.senderthreads.disable=true

# Duplicate message key set size
cluster.broadcast.keycache.size=100

# Time (in millis) to wait for all cluster nodes to respond with a healthcheck status
cluster.healthcheck.wait.time=2000

#
# --- JGroups broadcast method (beta)
#
cluster.broadcast.method.jgroups=de.hybris.platform.cluster.jgroups.JGroupsBroadcastMethod

#
# --- JGroups configuration file - default is jgroups-udp.xml
# --- accepted values: jgroups-udp.xml, jgroups-tcp.xml 
# --- or absolute path to custom jgroups configuration file
# --- See https://wiki.hybris.com/display/release5/Configuring+a+hybris+Cluster#ConfiguringahybrisCluster-JGroupsbasedCluster for details.
#
cluster.broadcast.method.jgroups.configuration=jgroups-udp.xml

#
# --- Common JGroups options
#
cluster.broadcast.method.jgroups.channel.name=hybris-broadcast

#
# --- TCP related JGroups options
#
cluster.broadcast.method.jgroups.tcp.bind_addr=127.0.0.1
cluster.broadcast.method.jgroups.tcp.bind_port=7800

#
# --- UDP related JGroups options
#
cluster.broadcast.method.jgroups.udp.mcast_port=45588

#
# --- Unicast (UDP) broadcast configuration
# 
cluster.broadcast.method.unicast=de.hybris.platform.cluster.udp.UnicastBroadcastMethod
#
# this nodes (UDP) listen address
#
cluster.broadcast.method.unicast.serveraddress=127.0.0.1
#
# this nodes (UDP) listen port
#
cluster.broadcast.method.unicast.port=9997
#
# the list of all known other nodes
#
cluster.broadcast.method.unicast.clusternodes=
#
# the seconds between sync nodes messages are sent to all nodes in the cluster.
# this way new nodes can join a cluster if at least one node is already known because
# it will send his nodes (including its onw address) to all others which will merge them
# to their nodes and send them back to all other nodes in the cluster.
# if you set this to < 0 no sync messages are sent and joining requires manual config
# update!
#
cluster.broadcast.method.unicast.sync.nodes.interval=-1


# --- Multicast (UDP) broadcast configuration
# 
# Address of the UDPServer/Sender used for cache invalidating.
# If you have more than one NIC it may be necessary to set interface 
# to the IP of the NIC used for sending/listening.
cluster.broadcast.method.udp=de.hybris.platform.cluster.udp.UDPBroadcastMethod

# Multicast address, on which the node listens for cluster messages
cluster.broadcast.method.udp.multicastaddress=230.0.0.1

# Port on which the node listens for cluster messages
cluster.broadcast.method.udp.port=9997

# Uncomment it for operating systems with many network interfaces 
# to specify the interface used for communication
#cluster.broadcast.method.udp.networkinterface=127.0.0.1

######################## USER SETTINGS #################################
#
#
############################################################################

# Enables users of type Customer being able to have the 'admin' role regardless
# of them being in the 'admingroup' user group. Default is 'false' for safety 
# *and* performance reasons.
allow.customer.admin=false

######################## PRICEFACTORY SETTINGS #################################
#
#
############################################################################

# Name of an extension used as the default PriceFactory from the list of installed extensions  
default.pricefactory=europe1


# The default price accuracy that is used when getting price information
# from the europe1 PriceFactory. Possible values are:
#  -- full   
#  -- second
#  --  minute
#  -- hour   
#  -- day  (DEFAULT)
# Since hybris Platform 3.1-u4 the finest allowed value is "hour"
europe1.price.accuracy=day

# Enable caching taxes. Use it only if there is a small number of tax
# rows in the system
# europe1.cache.taxes=true

# Enable marking products as modified whenever a price row gets changed by setting this property to true.
pdtrow.mark.product.modified=true

##################### hMC SETTINGS ####################################
#
#
#
############################################################################

# Specifies the location, from which the hMC retrieves its configuration: 
# -- "true" - for the database
# -- "false" - for the server's file system
# Use "true" for clustered systems.
hmc.structure.db=true

# System language used by default in the hMC
hmc.language=en

# Set to "true" to enable automatically logging into the hMC, 
# but it makes only sense during the development, because of the security risk.
hmc.default.autologin=false

# Login and password for the automatic logging into the hMC
hmc.default.login=admin
hmc.default.password=nimda

# List of all possible values of items per page in result lists
hmc.result.ranges=20,50,100,500,1000,*

# Forces usage of jalo in hMC order/entry calculation/recalculation actions
#hmc.force.jalo.order.calculations=true

###################### STATISTICS SERVICE SETTINGS #####################################
#
# Confiugre Statistics-Data Settings, which collects data to be shown in charts 
# in Hybris Administraion Console (hAC). The stored data is divided into three 
# different memories. First memory stores all of the latest ticks, the ticks older
# than 12 hours are transfered into the second memory, where 10 ticks are bundled 
# into 1 tick, the third memory stores the ticks older than one week, where 10 ticks
# of the second memory are bundled into 1 tick. All ticks older than 1 month (31 days)
# are dumped.
#
########################################################################################

# Sets the Interval in ms in which Statistics-Service collects Data.
# Minimum Value is 1000 (= 1s).
# Note that memory consumption of Statistics-Service depends on the Interval set.
# Maximum stored ticks at interval = 1s and levels set to default are: 43200 + 60480 + 26784 = 130464 for each data-collector.
# This makes about 60MB of occupied RAM.
hac.statistics.statisticsservice.interval=1000
# The time in ms that ticks are held in Level one memory. By default: 1 day (24 hours).
# hac.statistics.statisticsdata.levelOne=120000
hac.statistics.statisticsdata.levelOne=43200000
# The time in ms that ticks are held in level two memory. By default: 7 days.
# hac.statistics.statisticsdata.levelTwo=300000
hac.statistics.statisticsdata.levelTwo=604800000
# The time in ms that ticks are held in level three memory. By default: 1 month (31 days).
# hac.statistics.statisticsdata.levelThree=6000000
hac.statistics.statisticsdata.levelThree=2678400000

# Configures the statisticsService to collect data in standalone mode ore not.
hac.statistics.statisticsservice.standalone=false



##################### Cockpit SETTINGS ####################################
#
# 
#
#######################################################################

# Default login and password for logging into cockpits
cockpit.default.login=
cockpit.default.password=

# Default domain code used for new comments
cockpit.default.commentsection.domaincode=cockpit

# Default component code used for new comments
cockpit.default.commentsection.componentcode=cockpit

# Default comment type code used for new comments
cockpit.default.commentsection.commenttypecode=comment

# The maximum number of replies displayed in the comment section of the editor area
cockpit.default.commentsection.maxreplylevel=3

# Set to true to enable the display of comments
cockpit.default.comments.enabled=false

# Default VJDBC host for report cockpit
cockpit.reports.vjdbc.host=localhost

# Default VJDBC port for report cockpit
cockpit.reports.vjdbc.port=9001

# Default VJDBC user name for report cockpit
cockpit.reports.vjdbc.username=vjdbcReportsUser

# Default VJDBC user password for report cockpit
cockpit.reports.vjdbc.password=1234

# Should the selected context area items be displayed in the inspector?
cockpit.show.context.items.in.inspector=true

# Set the pageSize combobox to readOnly
cockpit.default.pageSizeCombobox.readOnly=false
#admincockpit.default.pageSizeCombobox.readOnly=true

# Allow to persit if the section in editor mode is closed or opened
cockpit.editor.config.store.onthefly=true
#productcockpit.editor.config.store.onthefly=true


##################### CronJob SETTINGS ####################################
#
# Configure parameters for cron jobs, which are used for executing tasks
# regularly at a certain point of time.
#
############################################################################

# A timer interval (in seconds) that checks if any trigger should be fired and activates them
cronjob.trigger.interval=30

# Set the global threshold for logging from within cron jobs
# Never set the log level to a higher level than this, 
# you will receive warnings if you do so.
# ***WARNING***: Do NOT set this to DEBUG in production environments.
# It will blow away your filesystem or database. ***WARNING***
cronjob.logtofile.threshold=INFO
cronjob.logtodb.threshold=WARN


# A subject for an email sent if a cron job execution succeeded or failed.
# You may use placeholders:
# -- {0} will be replaced with CronJob code 
# -- {1} will be replaced with Job code
cronjob.mail.subject.success=Finished Cronjob {0} ({1}) successfully
cronjob.mail.subject.fail=Finished CronJob {0} ({1}) with failures

# The maximum number of threads for cron jobs on a single cluster node
cronjob.maxthreads=80

# The maximum amount of seconds to wait during tenant shutdown for currently running jobs
shutdown.threadpool.wait.timeout=60

# Session context attributes which must be ignored even if single
# cronjob instances have them stored as context attributes. Note
# that these attributes are *case sensitive*!
# (See PLA-13735 for a harmful example.)
cronjob.ctx.filtered.attributes=dont.change.existing.links, disable.attribute.check, transaction_in_create_disabled, core.types.creation.initial, catalog.sync.active

######################## MAIL SETTINGS ####################################
#
# The hybris Multichannel Suite uses the Apache Commons Email:
# http://commons.apache.org/email/
#
###########################################################################

# Email address displayed in the "Sender" field (mandatory)
mail.from=test@hybris.de

# Email address used for replying to emails (mandatory)
mail.replyto=test@hybris.de


# If this property is set, the mail session object uses JNDI lookup
# mail.fromJNDI=java:/comp/env/mail/Session


# NOTE: The following settings are only used if you do NOT have 
# configured to get the mail session from the JNDI tree.

# SMTP server used to send emails (mandatory)
# mail.smtp.server=your_smtp_server_here

# A port number of the SMTP server used for sending emails 
# if different from the default port (optional)
# mail.smtp.port=25

# User account and password used for the authentification with the SMTP server (optional)
#mail.smtp.user=smtp_user_name
#mail.smtp.password=smtp_password

# Specifies whether is it necessary to connect to a POP3 server 
# before any emails can be sent via SMTP (mandatory)
mail.pop3.beforesmtp=false

# POP3 server that is to be contacted before sending 
# email via SMTP (mandatory if mail.pop3.beforesmtp=true)
mail.pop3.server=your_pop3_server_here

# POP3 user account and password for contacting POP3 server before 
# sending via smtp (mandatory if mail.pop3.beforesmtp=true)
mail.pop3.user=pop3_user_name
mail.pop3.password=pop3_password

# Use tls or not
mail.use.tls=false

############################## SESSION SETTINGS ################################
#
# Settings to configure session behaviour
#
################################################################################

# The default session timeout (in seconds).
# If you specify 0 or less, the session will never timeout
default.session.timeout=3600

# Controls cart removal behavior on session close. Default is true, so card will be removed
session.remove.cart.on.close=true

################################## LOG4J SETTINGS ######################################
#
# Log4J settings are used for logging output.
# See examples below for how to log different classes to different
# appenders in different levels
#
########################################################################################

# Create a Log4J appender called CONSOLE
log4j.appender.CONSOLE=de.hybris.platform.log.ANSIConsoleAppender

# Settings for changing colors of different log levels:
# fatal, error, warn, info, trace, debug
# The example shows the warnColor set to magenta
#log4j.appender.CONSOLE.warnColor=0;35

# Add ';' as the separator
#NORMAL = 0
#BRIGHT = 1
#FOREGROUND_BLACK = 30
#FOREGROUND_RED = 31
#FOREGROUND_GREEN = 32
#FOREGROUND_YELLOW = 33
#FOREGROUND_BLUE = 34
#FOREGROUND_MAGENTA = 35
#FOREGROUND_CYAN = 36
#FOREGROUND_WHITE = 37
# For more details see http://en.wikipedia.org/wiki/ANSI_escape_code
# Note that prefix and suffix for parameters are added for you

# Set the target for the CONSOLE appender
log4j.appender.CONSOLE.Target=System.out

# The log level of the CONSOLE appender
log4j.appender.CONSOLE.Threshold=DEBUG

# Value of the layout parameter for the CONSOLE appender
# See http://logging.apache.org/log4j/ for more details
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout

# The conversion pattern for the CONSOLE appender
log4j.appender.CONSOLE.layout.ConversionPattern=%-5p [%t] %X{RemoteAddr}%X{Tenant}%X{CronJob}[%c{1}] %m%n

# The log level and the appenders for the rootLogger to use 
log4j.rootLogger=info, CONSOLE

# Log level for log messages of the Spring framework used in the hybris Multichannel Suite 
log4j.logger.org.springframework=warn, CONSOLE
log4j.logger.org.springframework.aop.framework.Cglib2AopProxy=error, CONSOLE

# This has to be adjusted to INFO in order to display obolotet tenant scope definitions
log4j.logger.de.hybris.platform.spring.ctx.ScopeTenantIgnoreDocReader=WARN, CONSOLE
log4j.logger.de.hybris.platform.spring.IgnoreTenantScopeMetadataResolver=WARN, CONSOLE

log4j.logger.hsqldb.db=warn, CONSOLE

# silencing some DDL utils internals logs
log4j.logger.org.apache.ddlutils.alteration.ModelComparator=warn, CONSOLE


log4j.logger.de.hybris.platform.spring.ctx.CloseAwareApplicationContext=warn, CONSOLE
log4j.logger.de.hybris.platform.spring.ctx.TenantIgnoreXmlWebApplicationContext=warn, CONSOLE
# There are a lot of unsupported attributes messages we do not want to see each time
log4j.logger.de.hybris.platform.servicelayer.hmc=warn, CONSOLE

# A sample of how a custom logger for a custom package could look like. 
# Be aware to use a low logger level for development. 
log4j.logger.your.package=debug


# -----------------------------------------------------------------
# --- Some useful logging statements and settings
# -----------------------------------------------------------------

# -- Create a Log4J appender called FILE
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender

# The name of the log file of the FILE appender. 
#log4j.appender.FILE.File=${HYBRIS_LOG_DIR}/hybris.log

# Value of the maxFileSize parameter for the FILE appender.  
#log4j.appender.FILE.MaxFileSize=50MB

# The log level of the FILE appender
#log4j.appender.FILE.Threshold=DEBUG

# The value of the maxBackupIndex parameter for the FILE appender 
#log4j.appender.FILE.MaxBackupIndex=100

# Value of the layout parameter for the FILE appender
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout

# The conversion pattern for the FILE appender
#log4j.appender.FILE.layout.ConversionPattern=%d %-5p [%X{RemoteAddr}] (%X{Tenant}) [%c] %m%n

# If you want to log everything into a file and console use this as rootlogger.
# Remember to disable the log4j.rootLogger above
#log4j.rootLogger=info, FILE, CONSOLE

# For debugging FlexibleSearch statements
#log4j.logger.de.hybris.platform.jalo.flexiblesearch=debug

# For logging all FlexibleSearch statements with "debug" into a file, but with "info" in console
#log4j.logger.de.hybris.platform.jalo.flexiblesearch=debug,FILE

# The additivity setting will only give the logger to the own configured logger and not also to the root logger
#log4j.additivity.de.hybris.platform.jalo.flexiblesearch=false

# For debugging cron jobs and triggers
#log4j.logger.de.hybris.platform.cronjob.jalo.TimerTaskUtils=debug
#log4j.logger.de.hybris.platform.cronjob.jalo.CronJobTimerTask=debug

# For debugging switching of tenants
#log4j.logger.de.hybris.platform.core.Registry=debug
#log4j.logger.de.hybris.platform.core.AbstractTenant=debug
#log4j.logger.de.hybris.platform.core.MasterTenant=debug
#log4j.logger.de.hybris.platform.core.SlaveTenant=debug

# For debugging switching of LDAP
#log4j.logger.de.hybris.platform.ldap=debug
#log4j.logger.de.hybris.platform.ldap.connection=debug
#log4j.logger.de.hybris.platform.ldap.jalo=debug
#log4j.logger.de.hybris.platform.ldap.jaloimpl=debug
#log4j.logger.de.hybris.platform.ldap.impex=debug

# For debugging switching of encryption feature
#log4j.logger.de.hybris.platform.util.encryption=debug
#log4j.logger.de.hybris.platform.core=debug

################################ PERFORMANCE LOGGING ###################################
#
# These settings are used to configure performance loggin in alltests target
#
########################################################################################

## use SimpleLog4jPerformanceMeasurement for the performance measurement
tests.performance.measurement.class=de.hybris.platform.testframework.performance.impl.SimpleLog4jPerformanceMeasurement
## If you want to disable the performance logging put the following property to local.properties
#tests.performance.measurement.class=de.hybris.platform.testframework.performance.impl.DisablePerformanceMeasurement

## configure SimpleLog4jPerformanceMeasurement
log4j.appender.PERFORMANCE_APPENDER = org.apache.log4j.RollingFileAppender
log4j.appender.PERFORMANCE_APPENDER.file = ${HYBRIS_LOG_DIR}/performance.log
log4j.appender.PERFORMANCE_APPENDER.layout=org.apache.log4j.PatternLayout
log4j.appender.PERFORMANCE_APPENDER.layout.ConversionPattern=%-5p [%X{operatingSystem}] [%X{database}] [%X{testClassName}] [%X{testMethodName}] [%X{testResult}] %X{timeTaken_ms}ms%n
log4j.logger.de.hybris.platform.testframework.performance.impl.SimpleLog4jPerformanceMeasurement=info, PERFORMANCE_APPENDER

############################## SECURITY SETTINGS ################################
#
# These settings can only be used if you have the Advanced Security Module licenced.
#
# CAUTION: You have to install the 'Java(TM) Cryptography Extension (JCE) Unlimited
# Strength Jurisdiction Policy Files', if there is a need for a stronger password!
#
################################################################################


# TRANSPARENT ATTRIBUTE ENCRYPTION (TAE)
# 
# KEY FILE LOCATION: ${platform_config_dir}/security/
#
# FORMAT: symmetric.key.file.<ID> = filename
#
# CAUTION:
# - Key files which has 'hybris' as file-extension, represents the new key file format !!!
#   This means that they were protected by a master password (see: symmetric.key.master.password)
# - The Admin Web offers you the possibility to create your own AES based encryption keys.
#   (see: Admin > Maintenance > Encryption Key Management)
# - If you dont specify a key file here, the default file at ${PLATFORMHOME}/core/resources/security will be used
#   ... but it is highly recommended that you configure you own key file !!!

# HINT:
#   1.) If there was no configured key file during the system initialization process, then the
#       default key file at ${PLATFORMHOME}/core/resources/security will be used.
#       ... internally this key will have the ID '1', so if you want to migrate from the default key to your own encryption key
#       the following steps should be executed:
#       a.) copy file ${platformhome}/core/resources/security/default-128-bit-aes-key.hybris to ${platform_config_dir}/security/
#       b.) configure your project.properties/local.properties like:
#			symmetric.key.file.1=default-128-bit-aes-key.hybris
#			symmetric.key.file.2=YOUR_OWN_KEY_FILE
#			symmetric.key.file.default=2
#		c.) run 'ant' and go to 'Admin Web > Maintenance > Encryption Key Migration'
# 	2.) If you want to migrate from 'symmetric.key.file.1' to 'symmetric.key.file.2' just set
# 	'symmetric.key.file.default=2', run 'ant' and go to 'Admin Web > Maintenance > Encryption Key Migration'

#symmetric.key.file.1=< ADD YOUR KEYFILE HERE >
#symmetric.key.file.2=< ADD YOUR KEYFILE HERE >

# ID of the key (see above), which will be used for all ENCRYPTION steps (decryption is done with the key
# which was used to encrypt the attribute, the id is stored with the attribute in the same db-column)

symmetric.key.file.default=1

# symmetric.key.master.password: all encryption files with the extension 'hybris' will be protected by this password
# we recommend that you  use a password with a higer key size like:
# symmetric.key.master.password=w427tg3uy73uioomc1fohx1w6pew00n124mlt8ksplpm6ynz55z6305w2nwtj22
# ... but for this, you have to be sure that you have installed the needed "Unlimited Jurisdiction Policy Files" from SUN
# (see devnet article "Transparent Attribute Encryption (TAE) - Pitfalls")

symmetric.key.master.password=1234567


# Also see platform/resources/advanced.properties for advanced properties. You can override them also in your
# ${PLATFORM_CONFIG_DIR}/local.properties


################## ImpEx SETTINGS #####################################
# The following settings are for the use of CSVReader/CSVWriter, for example ImpEx
#######################################################################

# A default character for separating CSV-fields
csv.fieldseparator=;

# A default character for enclosing a CSV-field
csv.quotecharacter="

# A default encoding used for reading and writing CSV-files. 
# Often used encodings are UTF-8 as well as windows-1252.
csv.encoding=utf-8

#################### LDAP SETTINGS ###################################
#
# LDAP connection settings
#
#######################################################################

# values: LDAP || ActiveDirectory || eDirectory || <YOUR OWN IMPLEMENTATION OF de.hybris.platform.ldap.connection.LDAPConnection>
ldap.server.type=LDAP

# ldap.server.url <IP|NAME>:<PORT> // default port is 389 (and 636 for SSL respectively)
ldap.server.url=

#
# server independent user settings
#
ldap.jndi.principals=
ldap.jndi.credentials=
ldap.server.root.dn=

###################### LOAD TIME WEAVING SETTINGS ####################
## LTW gets active as soon there will be some META-INF/aop.xml files in class path for Core/Web class loader
## for a core part of the extension aop.xml must be in extension/resources/META-INF/aop.xml
## for a web part of the extension aop.xml must be in extension/web/resourcesMETA-INF/aop.xml
aspect.weaver.library=aspectjweaver-1.6.12.jar
### these are properties which might provide some diagnostic info  http://www.eclipse.org/aspectj/doc/released/pdguide/trace.html
### !! be aware that weaver diagnostic mode could be override in aop.xml e.g. !!
### !! because of performance issues, on production system should be removed by deafult  !!
### <weaver options="-verbose -showWeaveInfo "/>
aspect.weaver.config=-Dorg.aspectj.tracing.enabled=false -Daj.weaving.verbose=false -Dorg.aspectj.weaver.showWeaveInfo=false
###########################################################################


#################### UTILITY SETTINGS ###################################
#
#######################################################################
resource.bundle.encoding=UTF-8

## If you are having troubles using UTF-8 as default encoding then please 
## switch back to ISO8859-1 (aka 'latin1') with the following entry:
#resource.bundle.encoding=ISO8859-1

################## BUILD/COMPILE SETTINGS #############################
#
# The following settings are used by the ant build scripts
#
#######################################################################

# Set to true if you want to build extensions in parallel if possible.
# Whenever there is no dependency, ant will fork multiple threads and
# build the extensions in parallel.
# This makes sense only if you have multiple cores in your system.
# Warning: 
# The outpout to console is printed asynchronously and with that hard to read.

build.parallel=false

##################### TEST SETTINGS ###################################
# 
########################################################################

test.connectionpooltest.testmultithreadedaccess.duration = 10
test.connectionpooltest.testmultithreadedaccess.threads=100
test.connectionpooltest.testmultithreadedaccess.dummystatement=false



##################### JUnit SETTINGS ###################################
# 
########################################################################

# Set to "fault" by default. Change to "true" if you want to do very 
# intense tests and checks after each test that inherits from HybrisJUnit4Test
# These tests include:
# -- ApplicationContextCheckRunListener (compares all beans before and after test run)
# -- TableSizeCheckRunListner (compares all table sizes before and after test run)
junit.intense.checks=false

# This property allow extensions to exclude specific packages and classes.
# Useful in case of one extension partially changing behaviour or others
# which might cause tests to fail within these other extensions.
#
testclasses.packages.excluded=


##################### Filter SETTINGS ###################################
#enables/disables the session replication support for the session filter
session.replication.support=false


##################### Installed Tenants #################################
#
########################################################################

# all slave tenant ids that will be installed to the system
installed.tenants=junit,foo,t1,t2

##################### Relation Optimizations ###########################
#
########################################################################

# In order to disable the ordering of relations which are configured to be ordered in the respective 
# *-items.xml, you need to add relation.<relationcode>.source.ordered=false and relation.<relationcode>.target.ordered=false 
# into your local.properties file to disable ordering of both relation ends. 
#
# Please pay attention, the relationcode is case sensitive, please check the correct spelling in the items.xml.
#
# E.g. to disable ordering for CategoryProductRelation you need to uncomment the following two lines:
#
#relation.CategoryProductRelation.source.ordered=false
#relation.CategoryProductRelation.target.ordered=false

# In order to disable marking the relation ends as modified, you need to add relation.<relationcode>.markmodified=false
# to your local.properties file. 
#
# Please pay attention, the relationcode is case sensitive, please check the correct spelling in the items.xml.
#
# E.g. to disable marking the usergroup item if you add/remove a user to/from this group, you have to uncomment the following line:
#
#relation.PrincipalGroupRelation.markmodified=false


############################## WebLogic SETTINGS ################################
#
# Settings to configure WebLogic deployment descriptors
#
################################################################################
core.weblogic.prefer-application-packages=com.mysql.*,com.sun.jersey.*,com.google.*,org.apache.commons.*,org.bouncycastle.*,com.google.common.*,com.mysql.*,org.gjt.mm.mysql.*,org.hsqldb.*,net.sourceforge.jtds.*,org.apache.commons.lang.*,javax.jws.*,org.joda.time.*,org.hibernate.*,javassist.*

# copy-tld-files specifies which tld files should be copied during build process to WEB-INF dir of WAR extensions
# it is needed by WebLogic
hac.weblogic.copy-tld-files=spring.tld,spring-form.tld,security.tld
testweb.weblogic.copy-tld-files=spring.tld,spring-form.tld,security.tld