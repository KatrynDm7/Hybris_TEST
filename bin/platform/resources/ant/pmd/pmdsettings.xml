<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="rsneu" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>PMD rule set</description>
 
	<exclude-pattern>.*/Generated/.*</exclude-pattern>
	<exclude-pattern>.*/gensrc/.*</exclude-pattern>
	<exclude-pattern>.*/jsp/.*</exclude-pattern>
	<exclude-pattern>.*_jsp.java</exclude-pattern>
	<exclude-pattern>.*/de/hybris/platform/cockpit/services/config/jaxb/.*</exclude-pattern>
	<exclude-pattern>.*/virtualjdbc/.*</exclude-pattern>
	<exclude-pattern>.*/jax-doclets/.*</exclude-pattern>
	
	<!-- ============================================================================================================ -->
	<!-- ===================== basic ruleset ======================================================================== -->
	<!-- ============================================================================================================ -->
	
	<rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidThreadGroup">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BooleanInstantiation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BrokenNullCheck">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/CheckResultSet">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
		<priority>1</priority>
	</rule>
	<!--
		make no sense for hybris. if statements can be used to make the code more readable. rule
		ref="rulesets/java/basic.xml/CollapsibleIfStatements"> <priority>1</priority> </rule
	-->
	<rule ref="rulesets/java/basic.xml/DoubleCheckedLocking">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/JumbledIncrementer">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
		<priority>2</priority>
	</rule>
	
	<!-- ============================================================================================================ -->
	<!-- ===================== empty ruleset ======================================================================== -->
	<!-- ============================================================================================================ -->
	
	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyIfStmt">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyInitializer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyStaticInitializer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptySwitchStatements">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyTryBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
		<priority>3</priority>
	</rule>
	
	<!-- ============================================================================================================ -->
	<!-- ===================== unnecessary ruleset ======================================================================= -->
	<!-- ============================================================================================================ -->
	
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== braces ruleset ======================================================================= -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
		<priority>5</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== clone ruleset ======================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/ProperCloneImplementation">
		<priority>4</priority>	
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== codesize ruleset ===================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssConstructorCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssMethodCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssTypeCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NPathComplexity">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyFields">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyMethods">
		<priority>5</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== controversial ruleset ================================================================ -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/controversial.xml/AssignmentInOperand">
		<priority>4</priority>
	</rule>
	<!--
		makes no sense for hybris rule ref="rulesets/java/controversial.xml/AtLeastOneConstructor"> <priority>4</priority> </rule
	-->
	<rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration">
		<priority>4</priority>
	</rule>
	<!-- makes no sense at all
	 rule ref="rulesets/java/controversial.xml/AvoidFinalLocalVariable">
	<priority>5</priority>
</rule
-->
	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingShortType">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/BooleanInversion">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/DefaultPackage">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/DontImportSun">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/NullAssignment">
		<priority>5</priority>
	</rule>
	<!-- makes no sense for hybris rule ref="rulesets/java/controversial.xml/OnlyOneReturn">
		<priority>5</priority>
	</rule
-->
	<rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== coupling ruleset ===================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/coupling.xml/ExcessiveImports">
		<priority>5</priority>
		<properties>
			<property name="minimum" value="40" />
		</properties>
	</rule>
	<rule ref="rulesets/java/coupling.xml/LooseCoupling">
		<priority>5</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== design ruleset ======================================================================= -->
	<!-- ============================================================================================================ -->
	<!--
		makes sense sometimes, so we commented it out rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod">
		<priority>4</priority> </rule
	-->
	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AccessorClassGeneration">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidConstantsInterface">
		<priority>4</priority>
	</rule>
	<!-- makes no sense for hybris
	  rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
		<priority>5</priority>
	</rule
	-->
	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidReassigningParameters">
		<priority>4</priority>
	</rule>
	<!--
		makes no sense at the moment rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel"> <priority>2</priority> </rule
	-->
	<rule ref="rulesets/java/design.xml/BadComparison">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
		<priority>2</priority>
	</rule>
	<!-- makes no sense for hybris
	  rule ref="rulesets/java/design.xml/CloseResource">
		<priority>1</priority>
	</rule
	-->
	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/ConfusingTernary">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt">
		<priority>4</priority>
	</rule>
	<!--
		makes no sense for hybris rule, b2b prio 2 ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract">
		<priority>1</priority> </rule
	-->
	<rule ref="rulesets/java/design.xml/EqualsNull">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/IdempotentOperations">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/ImmutableField">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/InstantiationToGetClass">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/MissingBreakInSwitch">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonStaticInitializer">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonThreadSafeSingleton">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/OptimizableToArrayCall">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/PreserveStackTrace">
		<priority>4</priority>
	</rule>
	<!--
		makes no sense, b2b prio 2 rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull"> <priority>1</priority> </rule
	-->
	<rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyBooleanReturns">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyConditional">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SingularField">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SwitchDensity">
		<priority>4</priority>
	</rule>
	<!-- makes no sense
	  rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault">
		<priority>5</priority>
	</rule
	-->
	<rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyMethod">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify">
		<priority>4</priority>
	</rule>
	<!--  
	 rule ref="rulesets/java/design.xml/UseSingleton">
		<priority>5</priority>
	</rule
	-->

	<!-- ============================================================================================================ -->
	<!-- ===================== finalizers ruleset =================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected">
		<priority>1</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== imports ruleset ====================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/imports.xml/DontImportJavaLang">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/imports.xml/DuplicateImports">
		<priority>3</priority>
		
	</rule>
	<rule ref="rulesets/java/imports.xml/ImportFromSamePackage">
		<priority>2</priority>
		
	</rule>
	<rule ref="rulesets/java/imports.xml/TooManyStaticImports">
		<priority>2</priority>
		<properties>
			<property name="maximumStaticImports">
				<value>10</value>
			</property>
			<property name="xpath" pluginname="true">
				<value>
                  <![CDATA[
.[count(ImportDeclaration[@Static = 'true']) > 10]
[not (//ClassOrInterfaceDeclaration[//ClassOrInterfaceType[typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[typeof(@Image, 'org.junit.Test', 'Test')]])]
                  ]]>
              </value>
			</property>
		</properties>
	</rule>
	<rule ref="rulesets/java/imports.xml/UnusedImports">
		<priority>2</priority>
	</rule>

	<!-- rule ref="rulesets/java/javabeans.xml/BeanMembersShouldSerialize"/ -->
	<!-- rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID"/ -->

	<!-- rule ref="rulesets/java/j2ee.xml/DoNotCallSystemExit"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/DoNotUseThreads"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/LocalHomeNamingConvention"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/LocalInterfaceSessionNamingConvention"/
-->
	<!-- rule ref="rulesets/java/j2ee.xml/MDBAndSessionBeanNamingConvention"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/RemoteInterfaceNamingConvention"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/RemoteSessionInterfaceNamingConvention"/
-->
	<!-- rule ref="rulesets/java/j2ee.xml/StaticEJBFieldShouldBeFinal"/ -->
	<!-- rule ref="rulesets/java/j2ee.xml/UseProperClassLoader"/ -->

	<!-- ============================================================================================================ -->
	<!-- ===================== junit ruleset ======================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/junit.xml/JUnitAssertionsShouldIncludeMessage">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitSpelling">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitStaticSuite">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion">
		<priority>2</priority>
	</rule>
	<!-- rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases">
		<priority>2</priority>
		<properties>
			<property name="hybrisComment" value="active" />
		</properties>
	</rule -->
	<rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion">
		<priority>2</priority>
	</rule>
	<!--  ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue">
		<priority>2</priority>
		<properties>
			<property name="hybrisComment" value="rule deactivated, because it reports false positives on Arrays.equals" />
		</properties>
	</rule-->
	<rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue">
		<priority>5</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== logging-jakarta-commons ruleset ====================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
		<priority>1</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== logging-java ruleset ================================================================= -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/SystemPrintln">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== migrating ruleset ==================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ByteInstantiation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
		<priority>2</priority>
	</rule>
	<!-- rule ref="rulesets/java/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation">
		<priority>1</priority>
	</rule
	-->
	<!--  rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseAfterAnnotation">
		<priority>1</priority>
	</rule
	-->
	<!-- rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseBeforeAnnotation">
		<priority>1</priority>
	</rule
	-->
	<!-- rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseTestAnnotation">
		<priority>1</priority>
	</rule
	-->
	<!-- rule ref="rulesets/java/migrating.xml/JUnitUseExpected">
		<priority>1</priority>
	</rule
	-->
	<rule ref="rulesets/java/migrating.xml/LongInstantiation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ShortInstantiation">
		<priority>2</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== naming ruleset ======================================================================= -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/naming.xml/AbstractNaming">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/BooleanGetMethodName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/ClassNamingConventions">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/LongVariable">
		<priority>4</priority>
		<properties>
			<property name="minimum" value="35" />
			<property name="xpath" pluginname="true">
				<value>
                  <![CDATA[
//VariableDeclaratorId[string-length(@Image) > $minimum and not(upper-case(@Image)=@Image)]
                  ]]>
              </value>
			</property>
		</properties>
	</rule>
	<rule ref="rulesets/java/naming.xml/MethodNamingConventions">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/MisleadingVariableName">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/NoPackage">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/PackageCase">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/ShortMethodName">
		<priority>3</priority>	
	</rule>
	<rule ref="rulesets/java/naming.xml/ShortVariable">
		<priority>2</priority>
		<properties>
			<property name="xpath" pluginname="true">
				<value>
                  <![CDATA[
//VariableDeclaratorId[string-length(@Image) < 3]
 [not(ancestor::ForInit)]
 [not((ancestor::FormalParameter) and (ancestor::TryStatement))]
 [not(@Image='tx' or @Image='id' or @Image='pk') ]
                  ]]>
              </value>
			</property>
		</properties>
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
		<priority>1</priority>
		
	</rule>
	<rule ref="rulesets/java/naming.xml/VariableNamingConventions">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== optimizations ruleset ================================================================ -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/optimizations.xml/AddEmptyString">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
		<priority>1</priority>
	</rule>
	<!--
		rule ref="rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops"> <priority>3</priority> <properties> <property
		name="hybrisComment" value="all, but too hard to implement on old code. prio 3" /> </properties> </rule
	-->
	<rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== strictexception ruleset ============================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== strings ruleset ====================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/strings.xml/AppendCharacterWithChar">
		<priority>2</priority>
	</rule>
	<!--
		does not work, because we use a lot of flexible search statements rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
		<priority>1</priority> </rule
	-->
	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField">
		<priority>1</priority>
	</rule>
	<!--
		rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends"> <priority>3</priority> <properties> <property name="hybrisComment"
		value="does not work as intended" /> </properties> </rule
	-->
	<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck">
		<priority>2</priority>
	</rule>
	<!--
		rule ref="rulesets/java/strings.xml/InefficientStringBuffering"> <priority>3</priority> <properties> <property name="hybrisComment"
		value="make no sense for us." /> </properties> </rule
	-->
	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringInstantiation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringToString">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UseIndexOfChar">
		<priority>1</priority>
	</rule>
	<!-- buggy 
	<rule ref="rulesets/java/strings.xml/UselessStringValueOf">
		<priority>2</priority>
	</rule>
	-->
	<rule ref="rulesets/java/strings.xml/UseStringBufferLength">
		<priority>3</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== sunsecure ruleset ==================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray">
		<priority>4</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== typeresolution ruleset =============================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/typeresolution.xml/LooseCoupling">
		<priority>4</priority>
	</rule>
	<!--
		rule ref="rulesets/java/typeresolution.xml/SignatureDeclareThrowsException"> <priority>3</priority> <properties> <property
		name="hybrisComment" value="duplicate rule. see strict exception rules" /> </properties> </rule
	-->
	<rule ref="rulesets/java/typeresolution.xml/UnusedImports">
		<priority>3</priority>
	</rule>

	<!-- ============================================================================================================ -->
	<!-- ===================== unusedcode ruleset =================================================================== -->
	<!-- ============================================================================================================ -->
	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedModifier">
		<priority>4</priority>
	</rule>
</ruleset>
