

# FlagsCollection
type.flagscollection.name=Option

#enumeration types 
type.regexpflag.name=RegExp flag
type.regexpflag.description=Regular expression flag considered when resolving the regular expression.
type.RegexpFlag.UNIX_LINES.name=Unix-lines
type.RegexpFlag.CASE_INSENSITIVE.name=Case-insensitive
type.RegexpFlag.COMMENTS.name=Comments
type.RegexpFlag.MULTILINE.name=Multiline
type.RegexpFlag.DOTALL.name=DOTALL mode
type.RegexpFlag.UNICODE_CASE.name=Unicode-aware
type.RegexpFlag.CANON_EQ.name=Canonical

type.validatorlanguage.name=Validator languages
type.ValidatorLanguage.BEANSHELL.name=BeanShell

type.severity.name=Severity level
type.Severity.WARN.name=Warning
type.Severity.ERROR.name=Error
type.Severity.INFO.name=Info

#relation types
type.composedtype.constraints.name=Constraint groups
type.AttributeDescriptor.constraints.name=Constraint groups
type.constraintgroup.constraints.name=Member constraints

# ConstraintGroup
type.constraintgroup.name=Constraint group
type.constraintgroup.interfacename.id=Group's marker
type.constraintgroup.interfacename.name=Group's unique Java interface marker
type.constraintgroup.id.name=ID

# AbstractConstraint
type.abstractconstraint.name=Constraint
type.abstractconstraint.id.name=ID
type.abstractconstraint.id.description=Unique constraint identifier.
type.abstractconstraint.active.name=Enabled
type.abstractconstraint.active.description=If set to true, then during reloading validation engine, the constraint will be attached.
type.abstractconstraint.needreload.name=Needs reloading
type.abstractconstraint.needreload.description=If true, the constraint is different since the last reload of the validation framework.
type.abstractconstraint.annotation.name=Annotation class
type.abstractconstraint.annotation.description=Full class name literal for a corresponding annotation.
type.abstractconstraint.defaultMessage.name=Default error message
type.abstractconstraint.defaultMessage.description=Localized resource bundle evaluated error message.
type.abstractconstraint.message.name=Error message
type.abstractconstraint.message.description=Hint: use placeholders (between curly brackets) for constraint attributes. For example : Size must be between {min} and {max}.
type.abstractconstraint.severity.name=Severity
type.abstractconstraint.severity.description=Severity level.
type.abstractconstraint.target.name=Class to validate
type.abstractconstraint.target.description=Target class covered with validation logic.
type.abstractconstraint.type.name=Composed type to validate
type.abstractconstraint.type.description=Composed type to validate. Setting this attribute will automatically fill the 'Class to validate' attribute.
type.abstractconstraint.constraintgroups.name=Constraint groups
type.abstractconstraint.constraintgroups.description=The constraint is linked to the following gconstraint groups. If set to null the group {Default} will be used.

# TypeConstraint
type.typeconstraint.name=ComposedType constraint

# AttributeConstraint
type.attributeconstraint.name=Attribute constraint
type.attributeconstraint.qualifier.name=Qualifier to validate
type.attributeconstraint.qualifier.description=Qualifier to validate.
type.attributeconstraint.descriptor.name=Attribute descriptor to validate
type.attributeconstraint.descriptor.description=Attribute descriptor to validate. Setting this attribute will automatically fill out the values for the 'Class, Composed type and Qualifier to validate' attributes.
type.attributeconstraint.languages.name=Validation languages
type.attributeconstraint.languages.description=Languages for which constraint will be enforced

# DynamicConstraint
type.DynamicConstraint.name=Dynamic constraint
type.DynamicConstraint.description=This constraint ensures that element must evaluate provided expression so it can be interpreted as boolean result.
type.DynamicConstraint.expression.name=Script body
type.DynamicConstraint.expression.description=Expression evaluated during validation using defined language syntax.\n Expression should return value which could be interpreted as true or false. 
type.DynamicConstraint.language.name=Script language
type.DynamicConstraint.language.description=Language of the provided expression.

# PatternConstraint
type.patternconstraint.name=Pattern constraint
type.patternconstraint.description=This constraint ensures that a value must match the following regular expression.
type.patternconstraint.flags.name=Regexp pattern flags
type.patternconstraint.flags.description=Regexp pattern flags.
type.patternconstraint.regexp.name=Regular expression
type.patternconstraint.regexp.description=Regular expression.

# PastConstraint
type.pastconstraint.name=Past constraint
type.pastconstraint.description=This constraint ensures that a value must be a date in the past.

# FutureConstraint
type.futureconstraint.name=Future constraint
type.futureconstraint.description=This constraint ensures that a value must be a date in the future.

# DigitsConstraint
type.digitsconstraint.name=Digits constraint
type.digitsconstraint.description=This constraint ensures that a value must be a number within accepted range.
type.digitsconstraint.integer.name=Integer part constraint
type.digitsconstraint.integer.description=Integer part constraint
type.digitsconstraint.fraction.name=Fraction part constraint
type.digitsconstraint.fraction.description=Fraction part constraint

# MinConstraint
type.minconstraint.name=Min constraint
type.minconstraint.description=This constraint ensures that a value  must be higher or equal to the specified minimum.
type.minconstraint.value.name=Minimal value
type.minconstraint.value.description=Minimal value

# MaxConstraint
type.maxconstraint.name=Max constraint
type.maxconstraint.description=This constraint ensures that a value  must be higher or equal to the specified maximum.
type.maxconstraint.value.name=Maximum value
type.maxconstraint.value.description=Maximum value

# DecimalMaxConstraint
type.decimalmaxconstraint.name=DecimalMax constraint
type.decimalmaxconstraint.description=This constraint ensures that a value  must be higher or equal to the specified maximum.
type.decimalmaxconstraint.value.name=Maximum decimal value
type.decimalmaxconstraint.value.description=Maximum decimal value

# DecimalMinConstraint
type.decimalminconstraint.name=DecimalMin constraint
type.decimalminconstraint.description=This constraint ensures that a value  must be higher or equal to the specified minimum.
type.decimalminconstraint.value.name=Minimum decimal value
type.decimalminconstraint.value.description=Minimum decimal value

# NullConstraint
type.nullconstraint.name=IsNull constraint
type.nullconstraint.description=This constraint ensures that a value is  null.

# NotNullConstraint
type.notnullconstraint.name=IsNotNull constraint
type.notnullconstraint.description=This constraint ensures that a value is not null.

# AssertTrueConstraint
type.asserttrueconstraint.name=AssertTrue constraint
type.asserttrueconstraint.description=This constraint ensures that a value is true.

#AssertFalseConstraint
type.assertfalseconstraint.name=AssertFalse constraint
type.assertfalseconstraint.description=This constraint ensures that a value is false.
 
# SizeConstraint
type.sizeconstraint.name=Size constraint
type.sizeconstraint.description=This constraint ensures that the size of the element in question must be within the specified boundaries (inclusive). This applies both to a field and a property. Supported types are String, Collection, Map, and Array. Null elements are considered valid.
type.sizeconstraint.min.name=Minimum range value
type.sizeconstraint.min.description=Minimum range value
type.sizeconstraint.max.name=Maximum range value
type.sizeconstraint.max.description=Maximum range value

#XorConstraint
type.XorNullReferenceConstraint.name=Xor constraint
type.XorNullReferenceConstraint.description=This constraint ensures that element defined attributes values meet the XOR operator (one and only one a time is not null).
type.XorNullReferenceConstraint.firstFieldName.name=First field qualifier
type.XorNullReferenceConstraint.firstFieldName.description=Qualifier for the first checked field.
type.XorNullReferenceConstraint.secondFieldName.name=Second field qualifier
type.XorNullReferenceConstraint.secondFieldName.description=Qualifier for the second checked field.

# NotEmptyConstraint
type.NotEmptyConstraint.name=String NotEmpty constraint
type.NotEmptyConstraint.description=This constraint ensures that a value is not empty.

# NotBlankConstraint
type.NotBlankConstraint.name=String NotBlank constraint
type.NotBlankConstraint.description=This constraint ensures that a value is not blank.

# CoverageConstraintGroup
type.CoverageConstraintGroup.name=Coverage constraint group
type.CoverageConstraintGroup.description=Constraint group used for coverage calculation
type.CoverageConstraintGroup.dedicatedTypes.name=Dedicated types
type.CoverageConstraintGroup.dedicatedTypes.description=
type.CoverageConstraintGroup.coverageDomainID.name=Domain ID
type.CoverageConstraintGroup.coverageDomainID.description=

type.HybrisDecimalMaxConstraint.name=Decimal max constraint
type.HybrisDecimalMaxConstraint.description=This constraint ensures that element defined attributes values don't exceed a max limit.
type.HybrisDecimalMaxConstraint.value.name=Limit value
type.HybrisDecimalMaxConstraint.value.description=

type.HybrisDecimalMinConstraint.name=Decimal min constraint
type.HybrisDecimalMinConstraint.description=This constraint ensures that element defined attributes values don't exceed a min limit.
type.HybrisDecimalMinConstraint.value.name=Limit value
type.HybrisDecimalMinConstraint.value.description=