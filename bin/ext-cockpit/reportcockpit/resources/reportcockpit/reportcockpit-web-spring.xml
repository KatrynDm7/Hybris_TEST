<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2013 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->


<!--
  WARNING: This is the Spring WEB configuration file. If you want to replace
  items or managers you have to do this from the extensions core configuration
  file (reportcockpit/resources/reportcockpit-spring.xml)
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName">

	<!--
		UICockpitSession represents session in an cockpit application. It manages e.g. the available cockpit perspectives.
	 -->
	<bean id="UICockpitSession" class="de.hybris.platform.cockpit.session.impl.UISessionImpl" scope="session">
		<property name="initialSessionListeners">
			<list></list>
		</property>
		<property name="availablePerspectives">
			<list>
				<ref bean="ReportPerspective"/>
				<ref bean="JirafePerspective"/>
			</list>
		</property>
		<property name="usingTestIDs" value="false" />
		<property name="dragOverPerspectivesEnabled" value="true" />
		<property name="cachePerspectivesEnabled" value="true" />
		<property name="sendEventsImmediately" value="false" />
		<property name="requestHandler" ref="RequestHandler" />
		<property name="cockpitTypeService" ref="cockpitTypeService"></property>
	</bean>

	<bean id="RequestHandler" class="de.hybris.platform.cockpit.session.impl.DefaultRequestHandler" scope="session">
		<property name="requestEventHandlers">
			<map>
				<entry key="activation">
					<bean class="de.hybris.platform.cockpit.session.impl.ActivationEventHandler">
						<property name="prefix" value="act" />
					</bean>
				</entry>
				<entry key="search">
					<bean class="de.hybris.platform.cockpit.session.impl.SearchEventHandler">
						<property name="prefix" value="srch" />
					</bean>
				</entry>
				<entry key="celum">
					<bean class="de.hybris.platform.cockpit.session.impl.CelumEventHandler" />
				</entry>
				<entry key="msg">
					<bean class="de.hybris.platform.cockpit.session.impl.NotificationEventHandler">
						<property name="prefix" value="msg" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<!-- filter -->	
	<bean id="reportCockpitFilterChain" class="de.hybris.platform.servicelayer.web.BackOfficeFilterChain">
		<constructor-arg>
			<list>
				<ref bean="log4jFilter"/>
				<ref bean="tenantActivationFilter"/>
				<ref bean="sessionFilter"/>
				<ref bean="reportCockpitDataSourceSwitchingFilter"/>
				<ref bean="reportCockpitCatalogVersionActivationFilter"/>
           		<ref bean="reportCockpitSecureMediaFilter"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="reportCockpitDataSourceSwitchingFilter" class="de.hybris.platform.servicelayer.web.DataSourceSwitchingFilter">
	</bean>
	
	 <bean id="reportCockpitCatalogVersionActivationFilter" class="de.hybris.platform.servicelayer.web.DynamicCatalogVersionActivationFilter">
		<property name="catalogVersionService" ref="catalogVersionService"/>
		<property name="catalogService" ref="catalogService"/>
		<aop:scoped-proxy/>
	</bean>
 
   <bean id="reportCockpitSecureMediaFilter" class="de.hybris.platform.servicelayer.web.SecureMediaFilter">
       <property name="mediaPermissionService" ref="mediaPermissionService"/>
       <property name="modelService" ref="modelService"/>
       <property name="userService" ref="userService"/>
       <property name="mediaService" ref="mediaService"/>
      <!-- <property name="secureMediaToken" value="securemedias"/>  securemedias is default but you may overwrite it -->
       <aop:scoped-proxy/>
     </bean>
	
	<bean id="jirafePageUrlProvider" class="de.hybris.platform.reportcockpit.jirafe.JirafePageUrlProvider"/>
	
	<bean id="JirafePerspective" scope="session" parent="BasePerspective" class="de.hybris.platform.reportcockpit.components.perspective.JirafePerspective">
		<property name="uid" value="cockpit.perspective.jirafe" /> 
		<property name="label" value="reportcockpit.perspective.jirafe" />  
		<property name="navigationArea">
			<bean parent="BaseNavigationArea" >
				<property name="sections">
					<list>
						<bean class="de.hybris.platform.cockpit.components.navigationarea.NavigationPanelSection">
							<property name="localizedLabel" value="navigationarea.history" />
							<property name="visible" value="true" />
							<property name="renderer">
								<bean class="de.hybris.platform.cockpit.components.navigationarea.renderer.UndoSectionRenderer" />
							</property>
						</bean>
					</list>
				</property>
			</bean>
		</property>
		<property name="browserArea">
		 	<bean class="de.hybris.platform.cockpit.session.impl.UrlBrowserArea">
		    	<property name="browserUid" value="urlbrowser.jirafe" />
		    	<property name="viewURI" value="/reportcockpit/jirafeBrowserArea.zul"/>
		   	</bean>
		</property>
		<property name="editorArea">
			<bean parent="BaseEditorAreaModel"/>
		</property>
		<property name="popupEditorArea">
			<bean parent="BasePopupEditor"/>
		</property>
		<property name="cockpitTypeService" ref="cockpitTypeService"/>
	</bean>

</beans>
